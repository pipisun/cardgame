Dim screenX, screenY
Dim intX, intY

Dim count, isFound 

'Record point for bottom card
//Dim bottomCardPointArr(7)

'Check Card K
Dim isKAvailable

'Save card info(point, suit,suitColor) and card position
Dim cardInfoArr(7,3), cardPosArr(7,2)
Dim allCardPicArr, suitPicArr

Dim noSuitableCardMatch

Dim isSearchPosCardChanged, isPosCardChanged

Dim intNewCardNumber, strNewCardSuit

Dim isCardHasBeenIdentifed

'Define variables for empty spots
Dim emptySpotCount, emptySpotPos

'Initial array for Foundation area
Dim foundationInfoArr(4,2)

Dim foundationPosArr(4,2)

Dim pilePosArr(3,2)

Dim pileCardInfoArr(3,3)

Dim pileSearchArea(3,4), pileSuitSearchArea(3,4)

Dim isFoundAnyCardMovedInACycle, isMoved, isFirstGroupInACycle, isFoundInTableau

Dim isExecutedAddSuitToCard 

Dim isCardMovedInTableauOrFoundation

Dim leftUpperCornerX, leftUpperCornerY
Dim rightUpperCornerX, rightUpperCornerY

Dim leftUpperCornerXForSuit, leftUpperCornerYForSuit
Dim rightUpperCornerXForSuit, rightUpperCornerYForSuit

Dim offsetX1, offsetX2
Dim offsetY1, offsetY2

Dim cardPoint
Dim cardSearchArea(7,4), suitSearchArea(7,4)
Dim globalPileIndex

'Comparison
Dim number1, number2
Dim number1SuitColor, number2SuitColor
Dim compareCounter
Dim cardPileLastCardSuitColor

Dim delayTime, delayTime2
Dim number1Arr, number2Arr
Dim number1TopElement, number2TopElement
Dim number1BottomElement, number2BottomElement
Dim number1Top, number2Top
Dim number1Small, number2Small
Dim number1TopSuitColor, number2TopSuitColor
Dim number1SmallSuitColor, number2SmallSuitColor

Dim tmpNumber1, tmpNumber1Color
Dim tmpNumber2, tmpNumber2Color

Dim tmpIndex

Dim cycletimes

Dim timesOfExecution

Dim isSwapChecked

Dim isEverEmptyPos(7)

'Start the game
screenX = GetScreenX()
screenY = GetScreenY()
TracePrint "Screen size:", screenX, screenY

'Run app
RunApp "com.tether.solitaire.klondike"
//SetAppSpeed "com.tether.solitaire.klondike", 5

Call playNow()
 
Call runTestScenarioForZ1(1)
//Call runTestScenarioForRealOneDollar(1)

Sub runTestScenarioForRealOneDollar(timesOfExecution)
	
	For i = 1 To timesOfExecution
		TracePrint "STARTING EXECUTION(TIMES):", i
		Call selectGame("entry0.60.png")
		Call startGame()
		Call waitGameToStart()
		
		Call init()
//		Call sortMaxToMin()
		Call printOutCardInfoAndMoveAFirst()
		Call sortMaxToMin()
		'Main
		Call main()
		
		'Sort again
		Call sortMaxToMin()
		
		Call printOut()
		
		Call moveCardToFoundation()
		
		Call moveKCard("", "", "")
		
		Call printOut()
		
		'Call main again
		Call sortMaxToMin()
		
		Call main()
		
		'Sort again
		Call sortMaxToMin()
		
		Call moveCardToFoundation()
		
		'Call addSuitToCard()
		
		Call moveCardFromWastePile()
		
		Call finalCheck()
		
		'End game
		Call endGame()
		
		Delay 8000
		
		TracePrint "END EXECUTION(TIMES):", i
	Next
End Sub

Sub runTestScenarioForZ1(timesOfExecution)
	
	For i = 1 To timesOfExecution
		TracePrint "STARTING EXECUTION(TIMES):", i
		Call selectGame("entryz1.png")
		Call startGame()
		Call waitGameToStart()
		
		Call init()
//		Call sortMaxToMin()
		Call printOutCardInfoAndMoveAFirst()
		Call sortMaxToMin()
		'Main
		Call main()
		
		'Sort again
		Call sortMaxToMin()
		
		Call printOut()
		
		Call moveCardToFoundation()
		
		Call moveKCard("", "", "")
		
		Call printOut()
		
		'Call main again
		Call sortMaxToMin()
		
		Call main()
		
		'Sort again
		Call sortMaxToMin()
		
		Call moveCardToFoundation()
		
		'Call addSuitToCard()
		
		Call moveCardFromWastePile()
		
		Call finalCheck()
		
		'End game
		Call endGame()
		
		Delay 8000
		
		TracePrint "END EXECUTION(TIMES):", i
	Next
End Sub	

//Call init()
//
//Call sortMaxToMin()

Sub printOutCardInfoAndMoveAFirst()
	For i = 0 To 6
		TracePrint "Card point:", cardInfoArr(i,0)
		TracePrint "Card position(x,y):", cardPosArr(i,0), ",", cardPosArr(i,1)
		TracePrint "Card suit type:", cardInfoArr(i,1)
		TracePrint "Card suit color:", cardInfoArr(i,2)
		Call moveAFirst(i)
	Next
End Sub

//Call sortMaxToMin()



'Move A first
Sub moveAFirst(index)
	'Move it to foundation if the card is A
	If cardInfoArr(index, 0) = "1" Then 
		Call moveToSpecificFoundationAreaAndUpdate(index, getSuitPosition(cardInfoArr(index, 1)), cardInfoArr(index, 0), cardInfoArr(index, 1), 1, "")
		Delay 200
		Call identifyNewCard(index)
	End If	
End Sub

Sub main()
	For i = 0 To 5
	//	If cardInfoArr(i,0) <> "?" Then
		number1 = CInt(cardInfoArr(i, 0))
		TracePrint "number1:", cardInfoArr(i, 0)
		For j = i + 1 To 6
			If cardInfoArr(i, 0) = "0" Then 
				Exit For 
			End If
			
			If cardInfoArr(j, 0) <> "0" Then 
//				If i <> 0 Then 
//					number1 = CInt(cardInfoArr(i, 0))
//				End If
				
				Dim ifPipeChar
				ifPipeChar = InStr(1, CStr(number1), "|")
				
				TracePrint "cint(number1£©:", number1
				If number1 = 0 Then 
					number1Arr = Split(cardInfoArr(i, 0), "|")
					TracePrint "Len(number1Arr):", Len(number1Arr)
					If Len(number1Arr) = 1 Then 
						number1 = CInt(Left(cardInfoArr(i, 0), Len(cardInfoArr(i, 0)) - 1))
					Else
						number1TopElement = number1Arr(0)
						number1BottomElement = number1Arr(Len(number1Arr)-1)
						number1Top = CInt(Left(number1TopElement, Len(number1TopElement) - 1))
						number1TopSuitColor = getSuitColor(Right(number1TopElement,1))
						number1Small = CInt(Left(number1BottomElement, Len(number1BottomElement) - 1))
						number1SmallSuitColor = getSuitColor(Right(number1BottomElement,1))
						TracePrint "new number1(suit) on top:", number1Top, number1TopSuitColor
						TracePrint "new number1(suit) on bottom:", number1Small,number1SmallSuitColor
					End If
	//				cardInfoArr(i, 2) = number1SmallSuitColor
				Else 
					TracePrint "ifPipeChar:",ifPipeChar
					If ifPipeChar > 0 Then 
						number1Arr = Split(number1, "|")
						number1BottomElement = number1Arr(Len(number1Arr) - 1)
						number1Small = CInt(Left(number1BottomElement, Len(number1BottomElement) - 1))
						number1SmallSuitColor = getSuitColor(Right(number1BottomElement, 1))
					End If
				End If
				
				TracePrint "number2:", cardInfoArr(j, 0)
				number2 = CInt(cardInfoArr(j, 0))
				TracePrint "cint(number2):", number2
				If number2 = 0 Then 
					number2Arr = Split(cardInfoArr(j, 0), "|")
					TracePrint "Len(number2Arr):", Len(number2Arr)
					If Len(number2Arr) = 1 Then 
						number2 = CInt(Left(cardInfoArr(j, 0), Len(cardInfoArr(j, 0)) - 1))
					Else
						number2TopElement = number2Arr(0)
						number2BottomElement = number2Arr(Len(number2Arr)-1)
						number2Top = CInt(Left(number2TopElement, Len(number2TopElement) - 1))
						number2TopSuitColor = getSuitColor(Right(number2TopElement,1))
						number2Small = CInt(Left(number2BottomElement, Len(number2BottomElement) - 1))
						number2SmallSuitColor = getSuitColor(Right(number2BottomElement,1))
						TracePrint "new number2(suit) on top:", number2Top, number2TopSuitColor
						TracePrint "new number2(suit) on bottom:", number2Small,number2SmallSuitColor
					End If
	//				cardInfoArr(j, 2) = number2TopSuitColor
				Else 
	//				number2SuitColor = cardInfoArr(j, 2)
				End If
				
				If number1 = 0 Or ifPipeChar > 0 Then 
					tmpNumber1 = number1Small
					tmpNumber1Color = number1SmallSuitColor
					compareCounter = 1
				Else 
					tmpNumber1 = number1
					tmpNumber1Color = cardInfoArr(i, 2)
				End If
				If number2 = 0 Then 
					tmpNumber2 = number2Top
					tmpNumber2Color = number2TopSuitColor
				Else 
					tmpNumber2 = number2
					tmpNumber2Color = cardInfoArr(j,2)
				End If
				
	//			If number2 <> 0 Then 
	//				If number1 <> 0 And number1Small <> Null Then 
	//					number1 = number1Small
	//					compareCounter = 1
	//				End If
					
	//				If number1 <> number2 And number1 > number2 Then 
			//			 	If j <> 6 And number2 <> CInt(cardInfoArr(j+1,0)) Then
			//				If cardInfoArr(j,0) <> "?" Then
			
				'Check if there is duplicate card point
				Dim duplicate
				duplicate = InStr(1, cardInfoArr(i, 0), cardInfoArr(j, 0))
				TracePrint "duplicate:", duplicate
						
//						TracePrint 	number1 - compareCounter, number2
	//					TracePrint	number1SmallSuitColor, number1SuitColor,number2SmallSuitColor,number2SuitColor
	//					If duplicate = 0 And (number1 - compareCounter = number2 And cardInfoArr(i,2) <> cardInfoArr(j,2) Or _
	//						number1 + 1 = number2Small And number1SuitColor <> number2SmallSuitColor Or _
	//						number1 - 1 = number2 And number1SuitColor <> number2SuitColor Or _
	//						number2 + 1 = number1Small And number2SuitColor <> number1SmallSuitColor Or _
	//						number2 -1 = number1 And number2SuitColor <> number1SuitColor) Then
				If duplicate = 0 And tmpNumber1 - compareCounter = tmpNumber2 And tmpNumber1Color <> tmpNumber2Color Then 
					
					Delay 500
					TracePrint "Abs(cardPosArr(j, 0) - cardPosArr(i, 0)):", Abs(cardPosArr(j, 0) - cardPosArr(i, 0))
					
					delayTime = getDelayTime(Abs(cardPosArr(j, 0) - cardPosArr(i, 0)))
					delayTime2 = getDelayTimeForR2L(Abs(cardPosArr(j, 0) - cardPosArr(i, 0)))
					TracePrint "...:", cardPosArr(j,0), cardPosArr(j,1), cardPosArr(i,0), cardPosArr(i,1)
	//						delayTime = 500
					Delay 50
							
					If InStr(1, cardInfoArr(i, 0), "|") > 0 Then 
						TracePrint "i>0, InStr(1, cardInfoArr(j, 0), |):", InStr(1, cardInfoArr(j, 0), "|")
						If InStr(1, cardInfoArr(j, 0), "|") > 0 Or Right(cardInfoArr(j,0),1) = "S" Or Right(cardInfoArr(j,0),1) = "H" Or Right(cardInfoArr(j,0),1) = "C" Or Right(cardInfoArr(j,0),1) = "D" Then 
							cardInfoArr(i, 0) = cardInfoArr(i, 0) & "|" & cardInfoArr(j, 0)
						Else
							cardInfoArr(i, 0) = cardInfoArr(i, 0) & "|" & cardInfoArr(j, 0) & cardInfoArr(j, 1)
						End If
					Else 
						TracePrint "i<0, InStr(1, cardInfoArr(j, 0), |):", InStr(1, cardInfoArr(j, 0), "|")
						TracePrint "isExecutedAddSuitToCard:", isExecutedAddSuitToCard
						If isExecutedAddSuitToCard = True Then
//									If InStr(1, cardPosArr(j, 0), "|") > 0 Then 
							cardInfoArr(i, 0) = cardInfoArr(i, 0) & "|" & cardInfoArr(j, 0)
//									Else
//										cardInfoArr(i, 0) = cardInfoArr(i, 0) & "|" & cardInfoArr(j, 0) & cardInfoArr(j, 1)
//									End If
						Else 
							If InStr(1, cardInfoArr(j, 0), "|") > 0 Or Right(cardInfoArr(j,0),1) = "S" Or Right(cardInfoArr(j,0),1) = "H" Or Right(cardInfoArr(j,0),1) = "C" Or Right(cardInfoArr(j,0),1) = "D" Then 
								cardInfoArr(i, 0) = cardInfoArr(i, 0) & cardInfoArr(i, 1) & "|" & cardInfoArr(j, 0)
							Else
								cardInfoArr(i, 0) = cardInfoArr(i, 0) & cardInfoArr(i, 1) & "|" & cardInfoArr(j, 0) & cardInfoArr(j, 1)
							End If
						End If
					End If
					
//					If InStr(1, cardInfoArr(j, 0), "|") > 0 Then 
//						Dim btma, btmar, btmarv
//						btma = Split(cardInfoArr(j, 0), "|")
//						btmar = btma(Len(btma) - 1)
//						btmarv = Right(btmar, 1)
//						bottomCardPointArr(i) = btmarv
//					Else 
//						bottomCardPointArr(i) = cardInfoArr(j, 0)
//					End If
					
//					TracePrint "bottomCardPointArr", i, ":",bottomCardPointArr(i) 
										
					cardInfoArr(i, 1) = cardInfoArr(j, 1)
					cardInfoArr(i, 2) = cardInfoArr(j, 2)
					
					Delay 100
					
					If cardPosArr(j, 0) < cardPosArr(i, 0) Then
						Swipe cardPosArr(j, 0), cardPosArr(j, 1), cardPosArr(i, 0), cardPosArr(i, 1), delayTime
					Else 
					 	Swipe cardPosArr(j, 0) + 50, cardPosArr(j, 1), cardPosArr(i, 0), cardPosArr(i, 1), delayTime2
					End If
//					If cardPosArr(j, 0) < cardPosArr(i, 0) Then 
//						Delay 50
//						If cardPosArr(i, 0) > 363 Then 
//							Swipe cardPosArr(j, 0) + 30, cardPosArr(j, 1) + 20, cardPosArr(i, 0) + 10, cardPosArr(i, 1), delayTime
//							'Swipe cardPosArr(j, 0) + 30, cardPosArr(j, 1) + 20, cardPosArr(i, 0) + 10, cardPosArr(i, 1), delayTime
//						Else
//							Swipe cardPosArr(j, 0) + 30, cardPosArr(j, 1) + 20, cardPosArr(i, 0) + 20, cardPosArr(i, 1), delayTime
//						End If
//					Else 
//						If cardPosArr(i, 0) < 50 Then 
//						 	Delay 100
//							If cardPosArr(j, 0) > 550 Then 
//								Swipe cardPosArr(j, 0) + 40, cardPosArr(j, 1) + 20, cardPosArr(i, 0), cardPosArr(i, 1), delayTime
//							Else
//								Swipe cardPosArr(j, 0) + 40, cardPosArr(j, 1) + 20, cardPosArr(i, 0)+10, cardPosArr(i, 1) + 20, delayTime
//							End If
//						ElseIf cardPosArr(j, 0) > 530 Then
//							Delay 100
//							Swipe cardPosArr(j, 0) + 20, cardPosArr(j, 1) + 20, cardPosArr(i, 0) + 10, cardPosArr(i, 1), delayTime
//						Else 
//							Delay 100
//							If Abs(cardPosArr(j, 0) - cardPosArr(i, 0)) > 450 Then 
//								Swipe cardPosArr(j, 0) + 30, cardPosArr(j, 1) + 10, cardPosArr(i, 0) + 10, cardPosArr(i, 1), delayTime
//							Else
//								Swipe cardPosArr(j, 0) + 40, cardPosArr(j, 1) + 10, cardPosArr(i, 0) + 20, cardPosArr(i, 1), delayTime
//							End If
//						End If
//					End If
							
					isCardMovedInTableauOrFoundation = True
					
					'Update search area
					If cardPosArr(j, 0) > 91 Then
						Call updateSearchAreaRange(j, 30, "up")
						Call updateCardPosition(j, -10)
					End If
					
					Delay 100
					compareCounter = compareCounter + 1
					
					TracePrint "AFTER SWIPING..."
					TracePrint "cardInfoArr():", cardInfoArr(i,0),",", cardInfoArr(i,1),",",cardInfoArr(i,2)
					number1 = cardInfoArr(i, 0)
					
					'Waiting for new card appears
					Delay 500
					
					'Identify the new card
					Call identifyNewCard(j)
					
					Dim oldPosition, newPosition, multiPositionArr, firstPos, secondPos
					Dim firstValue, secondValue
					
					oldPosition = j
					newPosition = j
			
					'Check if there is a match
					TracePrint "cardInfoArr(newPosition, 0):",  cardInfoArr(newPosition, 0)
					TracePrint "isCardHasBeenIdentifed:", isCardHasBeenIdentifed
					
					While cardInfoArr(newPosition, 0) <> "0" Or isCardHasBeenIdentifed = False
						newPosition = moveCardAfterIdentify(oldPosition, "")
						If newPosition = Null Or newPosition = 0 Then 
							Exit While
						End If
						TracePrint "oldPosition:", oldPosition, ",newPosition:", newPosition
						If newPosition <> oldPosition Or noSuitableCardMatch = False Then 
							oldPosition = newPosition
							noSuitableCardMatch = True
							Call identifyNewCard(newPosition)
						Else 
							Exit While
						End If
					Wend
				ElseIf j <> 6 And number2 <> CInt(cardInfoArr(j+1,0)) Then
					'Exit For
				End If
	//				End If
			End If
		Next
		compareCounter = 1
	//	End If
	Next
End Sub

Sub updateCardPosition(index, offset)
	//cardPosArr(index,0) = cardPosArr(index,0) + offset
	cardPosArr(index,1) = cardPosArr(index,1) + offset
End Sub

//'Main
//Call main()
//
//'Sort again
//Call sortMaxToMin()
//
//Call printOut()
//
//Call moveCardToFoundation()
//
//Call moveKCard("", "", "")
//
//Call printOut()
//
//'Call main again
//Call sortMaxToMin()
//
//Call main()
//
//'Sort again
//Call sortMaxToMin()
//
//Call moveCardToFoundation()
//
//Call addSuitToCard()
//
//Call moveCardFromWastePile()
//
//Call finalCheck()

Sub printOut()
	For i = 0 To 6
		TracePrint "cardInfoArr", i, ":", cardInfoArr(i,0)
//		TracePrint "btmCardPointArr", i, ":", bottomCardPointArr(i)
	Next
End Sub

Sub sortBottomArrayValue()
//	Dim temp
//	For i = 0 To 5
//		For j = i+1 To 6
//			If CInt(bottomCardPointArr(i)) > CInt(bottomCardPointArr(j)) Then 
//				temp = bottomCardPointArr(j)
//				bottomCardPointArr(j) = bottomCardPointArr(i)
//				bottomCardPointArr(i) = temp
//			End If
//		Next
//	Next
//	
//	For m = 0 To 6
//		TracePrint "bottomCardPointArr ", m, ":", bottomCardPointArr(m)
//	Next
End Sub

Sub moveCardFromWastePile()
	Dim element, elementSuit
	Dim timer
	Dim pos
	pos = 0
//	timer = 28
	Dim intX, intY, timesinacycle
	cycletimes = 0
	timesinacycle = 8
	Do
		Tap 588, 162
		Delay 100
		
		'Check foundation area
		Call checkFoundationForPile(tmpIndex, "")
		
		Delay 200
		
		TracePrint "isMoved in pile:", isMoved
		TracePrint "isFoundAnyCardMovedInACycle", isFoundAnyCardMovedInACycle
		TracePrint "pos", pos
		TracePrint "tmpIndex", tmpIndex
		
		If tmpIndex = Null Then 
			tmpIndex = 0
		End If
//		TracePrint "tmpIndex", tmpIndex
		
//		TracePrint "Sort bottomCardPointArr"
//		Call sortBottomArrayValue()
		
		If tmpIndex <> 3 Then		
			Call checkTableauForPile(tmpIndex, "")
		End If
		
		If isFoundAnyCardMovedInACycle = True Then 
			
			Call sortMaxToMin()
			
			TracePrint "PRINTOUT cardInfoArr(7,3)"
			
			Call printOut()
			
			Call main()
		
			Call moveCardToFoundation()
		End If
//		cycletimes = cycletimes - 1
		
//		If cycletimes = 1 Then 
//			isFirstGroupInACycle = False
//		End If
		TracePrint "isFoundAnyCardMovedInACycle", isFoundAnyCardMovedInACycle
		
		'If one loop ends
		FindPic 550, 110, 634, 224, "Attachment:" & "endoneloop.png", "000000", 0, 0.5, intX, intY
		If intX > 0 And intY > 0 Then 
//			timesinacycle = cycletimes
			cycletimes = cycletimes + 1
			If isFoundAnyCardMovedInACycle = False Then 
			 	If isKAvailable = True And emptySpotCount > 0 Then 
			 		'Go to next loop
			 		isKAvailable = False
			 	Else 
					Exit Do
				End If
			End If
			Tap 591, 163
			isFirstGroupInACycle = True
			isFoundAnyCardMovedInACycle = False
			tmpIndex = 0
		Else 
			FindPic 550, 110, 634, 224, "Attachment:" & "20points.png", "000000", 0, 0.5, intX, intY
//			timesinacycle = cycletimes
			cycletimes = cycletimes + 1
			If intX > 0 And intY > 0 Then 
				If isFoundAnyCardMovedInACycle = False Then 
			 		If isKAvailable = True And emptySpotCount > 0 Then 
			 			'Go to next loop
			 			isKAvailable = False
			 		Else 
						Exit Do
					End If
				End If	
				Tap 591, 163
				isFirstGroupInACycle = True
				isFoundAnyCardMovedInACycle = False
				tmpIndex = 0
			Else 
				isFirstGroupInACycle = False
			End If
		End If
//		If cycletimes = 0 Then 
//			cycletimes = 8
//		End If
//		cycletimes = cycletimes + 1
		
	Loop While True
End Sub

Sub checkTableauForPile(tmpIndex, flag)
	Dim counter
	
	counter = 0
	isFoundInTableau = False
	'Check tableau area
	For t = tmpIndex To 2
		counter = counter + 1
		If isFoundInTableau = True Then 
			isFoundAnyCardMovedInACycle = True
			If isFirstGroupInACycle = False Then 
				Call identifyPileCard(0)
			Else 
				Call identifyPileCard(t)
			End If
			isFoundInTableau = False
		End If
		
		If isFirstGroupInACycle = False Then
			Call checkTableauAndMoveForPile(0)
			globalPileIndex = 0
		Else
			Call checkTableauAndMoveForPile(t)
			globalPileIndex = t
		End If
		
		If isFoundInTableau = False Then 
			If globalPileIndex <> 0 And counter > 1 Then 
				Call checkFoundationForPile(globalPileIndex, "AGAIN")
				counter = counter - 1
			ElseIf globalPileIndex = 0 And counter > 1 Then
				Call checkFoundationForPile(0, "AGAIN")
				counter = counter - 1
			End If
			
			Exit For
		End If
		Delay 200
	Next
End Sub

Sub checkFoundationForPile(tmpIndexIn, flag)
	Dim element, elementSuit
	For pos = 0 To 2
		TracePrint "tmpIndexIn", tmpIndexIn
		
		If tmpIndexIn = 3 Then 
			Exit Sub
		End If
		
		If flag <> "AGAIN" Or tmpIndexIn = 2 Then 
			Call identifyPileCard(tmpIndexIn)
		End If
		
		
		element = pileCardInfoArr(tmpIndexIn, 0)
		elementSuit = pileCardInfoArr(tmpIndexIn, 1)
		TracePrint "element,elementSuit:", element, elementSuit
		TracePrint "isFirstGroupInACycle:", isFirstGroupInACycle
		
		isMoved = checkFoundationAndMove(tmpIndexIn, element, elementSuit)
		If isMoved = False Then 
//			 	If pos = 0 Then 
//			 		isFoundAnyCardMovedInACycle = False	
//			 	End If
			Exit For
		ElseIf isFirstGroupInACycle = False Then
			TracePrint "pos-1:", tmpIndexIn
			tmpIndex = 0
			tmpIndexIn = 0
		Else 
			tmpIndexIn = tmpIndexIn + 1
			tmpIndex = tmpIndex + 1
		End If
		isFoundAnyCardMovedInACycle = True
		
		If flag = "AGAIN" Then 
			Call checkTableauForPile(tmpIndexIn, "")
		End If
		
		Delay 200
	Next
End Sub

Sub addSuitToCard()
	Dim lastDigitValue
	For i = 0 To 6
		lastDigitValue = Right(cardInfoArr(i, 0), 1)
		TracePrint "LAST DIGIT VALUE:", lastDigitValue
		If cardInfoArr(i, 0) <> "0" And lastDigitValue <> "S" And lastDigitValue <> "H" And lastDigitValue <> "C" And lastDigitValue <> "D" Then
			cardInfoArr(i, 0) = cardInfoArr(i, 0) & cardInfoArr(i, 1)
			TracePrint "cardInfoArr(i,0):", cardInfoArr(i,0)
		End If
	Next
	isExecutedAddSuitToCard = True
End Sub

Sub removeSuitFromCard(pos)
	Dim lastDigitValue
	For i = 0 To 6
		lastDigitValue = Right(cardInfoArr(pos, 0), 1)
		If lastDigitValue = "S" Or lastDigitValue = "H" Or lastDigitValue = "C" Or lastDigitValue = "D" Then
			cardInfoArr(pos, 0) = Left(cardInfoArr(pos, 0), Len(cardInfoArr(pos, 0))-1)
			TracePrint "cardInfoArr(pos,0):", cardInfoArr(pos,0)
		End If
	Next
End Sub

Function checkBottmCardPointForTableau(index)
//	For i = 0 To 6
//		If bottomCardPointArr(i) <> "0" Then 
//			TracePrint "pile, bottomcardpoint", pileCardInfoArr(index, 0), bottomCardPointArr(i)
//			If CInt(bottomCardPointArr(i)) - 1 = CInt(pileCardInfoArr(index, 0)) Then 
//				checkBottmCardPointForTableau = True
//				Exit Function
//			End If
//		End If
//	Next
//	checkBottmCardPointForTableau = False
End Function

Sub checkTableauAndMoveForPile(index)
	TracePrint "Check tableau for pile"
	TracePrint "pileCardInfoArr(index, 0):", pileCardInfoArr(index, 0)
		
	Dim lastDigitValue
//	For k = 0 To 2
//		If isMoved = True Then
//			Call identifyPileCard(index)
//		End If
		isCardMovedInTableauOrFoundation = False
		
		
		For i = 0 To 6
//			If checkBottmCardPointForTableau(index) = True Then
				If cardInfoArr(i,0) <> "0" Then
					'Get info for bottom card
					'TracePrint "cardInfoArr(i, 0):", cardInfoArr(i, 0)
					Dim btmArr, btmElement, btmElementSuit, btmElementNumber
					btmArr = Split(cardInfoArr(i, 0), "|")
					btmElement = btmArr(Len(btmArr) - 1)
					If Right(btmElement, 1) <> "S" And Right(btmElement, 1) <> "H" And Right(btmElement, 1) <> "C" And Right(btmElement, 1) <> "D" Then 
						btmElementNumber = btmElement
						lastDigitValue = cardInfoArr(i, 1)
						btmElementSuit = getSuitColor(lastDigitValue)
					Else	
						btmElementNumber = Left(btmElement, Len(btmElement) - 1)
						lastDigitValue = Right(cardInfoArr(i, 0), 1)
						btmElementSuit = getSuitColor(lastDigitValue)
					End If
					'btmElementNumber = Left(btmElement, Len(btmElement)-1)
					'lastDigitValue = Right(cardInfoArr(i,0),1)
					'btmElementSuit = getSuitColor(lastDigitValue)
					TracePrint "btmArr,btmElementNumber,lastDigitValue,btmElementSuit",btmArr,btmElementNumber,lastDigitValue,btmElementSuit
//					TracePrint "pileCardInfoArr(index, 0):", pileCardInfoArr(index, 0)
					
					Dim delayTime
					'If pileCardInfoArr(index, 0) <> "13" Then
						If CInt(pileCardInfoArr(index, 0)) + 1 = CInt(btmElementNumber) And pileCardInfoArr(index, 2) <> btmElementSuit Then 
							delayTime = getDelayTime(Abs(pilePosArr(index, 0) - cardPosArr(i, 0)))
							
							If cardPosArr(i, 0) > 360 Then 
								Swipe pilePosArr(index, 0), pilePosArr(index, 1), cardPosArr(i, 0) + 40, cardPosArr(i, 1), delayTime
							Else 
								Swipe pilePosArr(index, 0), pilePosArr(index, 1), cardPosArr(i, 0), cardPosArr(i, 1), delayTime	
							End If
							
							Delay 100
							If Right(btmElement, 1) <> "S" And Right(btmElement, 1) <> "H" And Right(btmElement, 1) <> "C" And Right(btmElement, 1) <> "D" Then
								cardInfoArr(i, 0) = cardInfoArr(i, 0) & cardInfoArr(i, 1) & "|" & pileCardInfoArr(index, 0) & pileCardInfoArr(index, 1)
							Else 
								cardInfoArr(i, 0) = cardInfoArr(i, 0) & "|" & pileCardInfoArr(index, 0) & pileCardInfoArr(index, 1) 
							End If
	//						bottomCardPointArr(i) = pileCardInfoArr(index, 0)
							isFoundAnyCardMovedInACycle = True
							isFoundInTableau = True
							Exit For
						Else 
							'isFoundAnyCardMovedInACycle = False
							isFoundInTableau = False
						End If
//					Else 
//						isFoundInTableau = False
//						Exit For 
//					End If
				Else 
				 	TracePrint "emptySpotCount", emptySpotCount
					If moveKCard(i, index, "") = True Then
						Delay 300
						Exit For
					End If
				End If
//			Else 
//				If moveKCard(i, index, "") = True Then 
//					Delay 300
//					Exit For
//				End If
//			End If
		Next
		
		'Identify next card in pile
		Delay 100
//	Next
End Sub

Function checkFoundationAndMove(pos, element, elementSuit)
	Dim index, isMoved
	index = getSuitPosition(elementSuit)
	isMoved = False
	
	If foundationInfoArr(index, 0) <> "0" Then 
		Dim splitArr, lastElementCombination, lastElement, lastElementSuit
		splitArr = Split(foundationInfoArr(index, 0), "|")
		lastElementCombination = splitArr(Len(splitArr) - 1)
		lastElement = Left(lastElementCombination, Len(lastElementCombination)-1)
		lastElementSuit = Right(lastElementCombination, 1)
		TracePrint "checkFoundationAndMove:lastElement,element",lastElement, element
		
		If CInt(lastElement) + 1 = CInt(element) Then 
			Delay 100
			Tap pilePosArr(pos, 0), pilePosArr(pos, 1)
			'Update search area
			'Call updateSearchAreaRange(pos, 9, "up")
		
			foundationInfoArr(index, 0) = foundationInfoArr(index, 0) & "|" & element & elementSuit
			
			isMoved = True
		End If
	Else 
		TracePrint "No A is there"
		If element = "1" Then 
			Dim delayTime
			delayTime = getDelayTime(Abs(pilePosArr(pos, 0) - foundationPosArr(index, 0)))
			Swipe pilePosArr(pos, 0), pilePosArr(pos, 1), foundationPosArr(index, 0), foundationPosArr(index, 1), delayTime
			
			'Update search area
			'Call updateSearchAreaRange(pos, 9, "up")
			
			foundationInfoArr(index, 0) = element & elementSuit
			isMoved = True
			
			Delay 200
		End If
	End If
	checkFoundationAndMove = isMoved
End Function

Function getDelayTimeForR2L(distance)
	TracePrint "Right to Left distance:", distance
	
	Dim delayTime
	If distance < 176 Then 
		delayTime = 150
	ElseIf distance < 268 Then
		delayTime = 300
	ElseIf distance < 358 Then
		delayTime = 300
	ElseIf distance < 450 Then
		delayTime = 750
	ElseIf distance < 540 Then
		delayTime = 1000
	Else 
		delayTime = 1200
	End If
	
	getDelayTimeForR2L = delayTime
End Function

Function getDelayTime(distance)
	TracePrint "distance:", distance
	
	Dim delayTime
	If distance < 176 Then 
		delayTime = 50
	ElseIf distance < 268 Then
		delayTime = 200
	ElseIf distance < 358 Then
		delayTime = 200
	ElseIf distance < 450 Then
		delayTime = 650
	ElseIf distance < 540 Then
		delayTime = 900
	Else 
		delayTime = 1000
	End If

//	If distance >= 500 Then 
//		delayTime = 5500							
//	ElseIf distance >= 430 Then 
//		delayTime = 5000							
//	ElseIf distance >= 400 Then 
//		delayTime = 4800
//	ElseIf distance >= 360 Then
//		TracePrint "delaying..."
//		delayTime = 5500
//	ElseIf distance >= 270 Then 
//		delayTime = 500
//	ElseIf distance >= 180 Then
//		delayTime = 1500
//	Else 
//		delayTime = 1200
//	End If
	
	getDelayTime = delayTime
End Function
Sub moveCardAgain()
	Dim cardStrArr
	For m = 0 To 6
		cardStrArr = Split(cardInfoArr(m, 0), "|")
		If Len(cardStrArr) > 1 Then 
			
		End If
	Next
End Sub

Sub moveCardToFoundation()
	Dim elementArr, isMoved, counter, newPosition
	isMoved = False
	
	Delay 500
		
	For m = 6 To 0 Step -1
		TracePrint "m=", m
		TracePrint "cardInfoArr(m,0):", cardInfoArr(m,0)
		elementArr = Split(cardInfoArr(m, 0), "|")
//		TracePrint "elementArr(0):", elementArr(0)
		If Len(elementArr) > 0 And cardInfoArr(m,0) <> "0" Then 
			TracePrint "Start moving card to foundation..."
			counter = 0
			For n = UBOUND(elementArr) To 0 Step -1
				If Len(elementArr) = 1 Then 
//					TracePrint "m=?", m, " elementArr(n)=?", elementArr(n), " cardInfo(m,1)=?", cardInfoArr(m,1) 
					If isExecutedAddSuitToCard = True Then 
						isMoved = checkIfMoveCardToFoundation(m, Left(elementArr(n),Len(elementArr(n))-1), cardInfoArr(m, 1), 1)
					Else
						isMoved = checkIfMoveCardToFoundation(m, elementArr(n), cardInfoArr(m, 1), 1)
					End If
				Else 
					Dim ele, eleSuit
					ele = Left(elementArr(n), Len(elementArr(n)) - 1)
					eleSuit = Right(elementArr(n), 1)
					isMoved = checkIfMoveCardToFoundation(m, ele, eleSuit, Len(elementArr))
					counter = counter + 1
					
					TracePrint "ele,eleSuit,isMoved,counter", ele,eleSuit,isMoved,counter
				End If
				
				TracePrint "isMoved:", isMoved
				
				If isMoved = True Then 
					isCardMovedInTableauOrFoundation = True
					
					If Len(elementArr) = 1 Or counter = Len(elementArr) Then 
		 	
						'Identify the new card
						Call identifyNewCard(m)
						
						Dim oldPosition
						
						oldPosition = m
				 		newPosition = m
				 		
						'Check if there is a match
						While cardInfoArr(newPosition, 0) <> "0" Or isCardHasBeenIdentifed = False
							newPosition = moveCardAfterIdentify(oldPosition,"")
							If newPosition <> oldPosition Or noSuitableCardMatch = False Then 
								oldPosition = newPosition
								noSuitableCardMatch = True
								Call identifyNewCard(newPosition)
							Else 
								Exit While
							End If
						Wend
					End If
					isMoved = False
					TracePrint "After identifyNew, m=",m
					'm = m + 1
				Else 
					Exit For
				End If
			Next
		End If
	Next
End Sub

Function getSuitPosition(suit)
	Dim pos
	pos = -1
	If suit = "S" Then 
		pos = 0
	ElseIf suit = "H" Then
		pos = 1
	ElseIf suit = "C" Then
		pos = 2
	ElseIf suit = "D" Then
		pos = 3
	End If
	
	getSuitPosition = pos
End Function

Function checkIfMoveCardToFoundation(pos, element, elementSuit, arrLength)
	Dim index
	index = getSuitPosition(elementSuit)
	TracePrint "index:", index
	TracePrint "foundationInfoArr£¨index,0):", foundationInfoArr(index, 0)
	TracePrint "pos,element,elementSuit", pos, " ", element, " ", elementSuit
	
	If foundationInfoArr(index, 0) = "0" Then
		If Len(element) = 1 And element = "1" Or (Len(element) = 2 And Left(element, 1) = "1" And _
			Right(element,1) <> "0" And Right(element,1) <> "1" And Right(element,1) <> "2"  And Right(element,1) <> "3") Then
			TracePrint "Moving A card..."
			Call moveToSpecificFoundationAreaAndUpdate(pos, index, element, elementSuit, arrLength, "")
			checkIfMoveCardToFoundation = True
			Exit Function
		End If
	Else 
		TracePrint "Moving other cards..."
		'Location last element in the array
		Dim eleInFoundation, eleSuitInFoundation, eleArr, lastElement
		eleArr = Split(foundationInfoArr(index, 0), "|")
		lastElement = eleArr(Len(eleArr)-1)
		eleInFoundation = Left(lastElement, Len(lastElement) - 1)
		eleSuitInFoundation = Right(lastElement, 1)
		If CInt(eleInFoundation) + 1 = CInt(element) And eleSuitInFoundation = elementSuit Then 
			Call moveToSpecificFoundationAreaAndUpdate(pos, index, element, elementSuit, arrLength, "HasA")
			checkIfMoveCardToFoundation = True
			Exit Function
		End If
	End If
	checkIfMoveCardToFoundation = False
End Function

Sub moveToSpecificFoundationAreaAndUpdate(pos, index, element, elementSuit, arrLength, isAFlag)
	TracePrint "pos,index,element,elementSuit,arrLength:",pos, " ", index, " ", element, " ", elementSuit, " ", arrLength
	TracePrint "cardPosArr(pos,0),(pos,1):", cardPosArr(pos, 0), cardPosArr(pos, 1)
	
	Dim offset
	If arrLength = 1 Then 
		offset = 0
	Else 
		offset = arrLength - 1
	End If
	
	Dim delayTime
	If Abs(cardPosArr(pos, 0) - 5) > 400 Then 
		delayTime = 800
	Else 
		delayTime = 500
	End If
	
	If isAFlag = "PILE" Then
		If elementSuit = "S" Then 
	 		TracePrint "Moving the S card..."
			Swipe pilePosArr(pos, 0), pilePosArr(pos, 1), foundationPosArr(0, 0), foundationPosArr(0, 1), delayTime
		ElseIf elementSuit = "H" Then
			TracePrint "Moving the H card..."
			Swipe pilePosArr(pos, 0), pilePosArr(pos, 1), foundationPosArr(1,0), foundationPosArr(1,1), delayTime
		ElseIf elementSuit = "C" Then
			TracePrint "Moving the C card..."
			Swipe pilePosArr(pos, 0), pilePosArr(pos, 1), foundationPosArr(2,0), foundationPosArr(2,1), delayTime
		ElseIf elementSuit = "D" Then
			TracePrint "Moving the D card..."
			Swipe pilePosArr(pos, 0), pilePosArr(pos, 1), foundationPosArr(3,0), foundationPosArr(3,1), delayTime
		End If
	ElseIf isAFlag = "" Then  
		If elementSuit = "S" Then 
	 		TracePrint "Moving the S card..."
	 		If cardPosArr(pos, 0) > 500 Then
				Swipe cardPosArr(pos, 0) + 40, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(0, 0), foundationPosArr(0, 1), delayTime
			ElseIf cardPosArr(pos, 0) > 360 Then
				Swipe cardPosArr(pos, 0) + 30, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(0, 0), foundationPosArr(0, 1), delayTime
			Else 
				Delay 100
				Swipe cardPosArr(pos, 0) + 20, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(0, 0), foundationPosArr(0, 1), delayTime+50
			End If
		ElseIf elementSuit = "H" Then
			TracePrint "Moving the H card..."
			If cardPosArr(pos, 0) > 500 Then 
			 	Swipe cardPosArr(pos, 0) + 40, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(1, 0), foundationPosArr(1, 1), delayTime
			ElseIf cardPosArr(pos, 0) > 360 Then
				Swipe cardPosArr(pos, 0) + 30, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(1, 0), foundationPosArr(1, 1), delayTime
			Else
				Swipe cardPosArr(pos, 0) + 30, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(1, 0), foundationPosArr(1, 1), delayTime + 100
			End If
		ElseIf elementSuit = "C" Then
			TracePrint "Moving the C card..."
			If cardPosArr(pos, 0) > 500 Then 
				Swipe cardPosArr(pos, 0) + 40, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(2, 0), foundationPosArr(2, 1), delayTime
			ElseIf cardPosArr(pos, 0) > 360 Then
				Swipe cardPosArr(pos, 0) + 30, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(2, 0), foundationPosArr(2, 1), delayTime
			Else 
				Swipe cardPosArr(pos, 0) + 10, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(2, 0), foundationPosArr(2, 1), delayTime
			End If
		ElseIf elementSuit = "D" Then
			TracePrint "Moving the D card..."
			If cardPosArr(pos, 0) > 440 Then 
				Swipe cardPosArr(pos, 0) + 40, cardPosArr(pos, 1) + 70 * offset + 10, foundationPosArr(3, 0), foundationPosArr(3, 1), delayTime
			ElseIf cardPosArr(pos, 0) > 360 Then
				Swipe cardPosArr(pos, 0) + 30, cardPosArr(pos, 1) + 70 * offset + 5, foundationPosArr(3, 0), foundationPosArr(3, 1), delayTime
			Else
				Swipe cardPosArr(pos, 0) + 10, cardPosArr(pos, 1) + 70 * offset + 10, foundationPosArr(3, 0), foundationPosArr(3, 1), delayTime
			End If
		End If
	Else 
		Delay 400
		TracePrint "Tap card to foundation:", cardInfoArr(pos,0), cardInfoArr(pos,1)
		Tap cardPosArr(pos, 0) + 20, cardPosArr(pos, 1) + 50 * offset + 5
	End If
	
	If foundationInfoArr(index, 0) = "0" Then 
		foundationInfoArr(index, 0) = element & elementSuit
	Else 
		foundationInfoArr(index, 0) = foundationInfoArr(index, 0) & "|" & element & elementSuit
	End If
	
	If isAFlag <> "PILE" Then
		'Update cardInfoArr
		Dim newStr, oldStrArr
		If InStr(1, cardInfoArr(pos, 0), "|") > 0 Then 
			oldStrArr = Split(cardInfoArr(pos,0), "|")
	 		newStr = Left(cardInfoArr(pos,0), Len(cardInfoArr(pos,0)) - Len(oldStrArr(Len(oldStrArr)-1))-1)
	 		TracePrint "newstr:", newStr
			cardInfoArr(pos, 0) = newStr
			cardInfoArr(pos, 1) = Right(newStr, 1)
			cardInfoArr(pos, 2) = getSuitColor(Right(newStr, 1))
		End If
		
		'Update search area range
		Call updateSearchAreaRange(pos, 30, "up")
		
		
	End If
End Sub

Sub updateSearchAreaRange(pos, offset, direction)
	If direction = "up"
		'Move search area up a bit
		cardSearchArea(pos,1) = cardSearchArea(pos,1) - offset
		cardSearchArea(pos,3) = cardSearchArea(pos,3) - offset
		suitSearchArea(pos,1) = suitSearchArea(pos,1) - offset
		suitSearchArea(pos, 3) = suitSearchArea(pos, 3) - offset
	ElseIf direction = "down" Then
		'Move search area up a bit
		cardSearchArea(pos,1) = cardSearchArea(pos,1) + offset
		cardSearchArea(pos,3) = cardSearchArea(pos,3) + offset
		suitSearchArea(pos,1) = suitSearchArea(pos,1) + offset
		suitSearchArea(pos, 3) = suitSearchArea(pos, 3) + offset	
	End If
End Sub

Function moveCardRule(pos, searchPos, intNewCardNumber, strNewCardSuit)
	Dim suitRule, intCardNumber, intTopCardNumber, strCardSuit, strTopCardSuit
	Dim delayTime
		
	suitRule = -1
	'If there is | in the string
	Dim pipePos, lastChar
	
	If isSwapChecked = True Then 
		intNewCardNumber = CInt(cardInfoArr(pos, 0))
		strNewCardSuit = cardInfoArr(pos, 2)
		TracePrint "isSwapChecked, intNewCardNumber", intNewCardNumber
		'isSwapChecked = False
	End If
	
	pipePos = InStr(1, cardInfoArr(searchPos, 0), "|")
	TracePrint "Pipe pos:", pipePos
	TracePrint "cardInfoArr(searchPos, 0):", cardInfoArr(searchPos, 0)
	If pipePos = 0 Then
		intCardNumber = CInt(cardInfoArr(searchPos, 0))
		
		lastChar = Right(cardInfoArr(searchPos, 0), 1)
		If lastChar = "S" Or lastChar = "H" Or lastChar = "C" Or lastChar = "D" Then 
			intCardNumber = Left(cardInfoArr(searchPos, 0), Len(cardInfoArr(searchPos, 0))-1)
		End If
		
		intTopCardNumber = intCardNumber
		strCardSuit = cardInfoArr(searchPos, 2)
		strTopCardSuit = strCardSuit
		
		TracePrint "Searching card:", intCardNumber
	Else 
		Dim newArr
		newArr = Split(cardInfoArr(searchPos,0),"|")
		intCardNumber = CInt(Mid(newArr(Len(newArr) - 1), 1, Len(newArr(Len(newArr) - 1)) - 1))
		intTopCardNumber = CInt(Mid(newArr(0), 1, Len(newArr(0)) - 1))
		strCardSuit = getSuitColor(Right(cardInfoArr(searchPos,0), 1))
		strTopCardSuit = getSuitColor(Right(newArr(0), 1))
		TracePrint "Searching card(Big):", intTopCardNumber
		TracePrint "Searching card(Small):", intCardNumber
	End If
	TracePrint "newCardNumber-1", intNewCardNumber-1,":=", intTopCardNumber
	TracePrint "newCardNumber+1", intNewCardNumber+1,":", intCardNumber
	TracePrint "strNewCardSuit", strNewCardSuit
	TracePrint "strTopCardSuit", strTopCardSuit
	
	Dim containsNumber1, containsNumber2
	containsNumber1 = InStr(1, cardInfoArr(pos, 0), CStr(intTopCardNumber))
	containsNumber2 = InStr(1, cardInfoArr(searchPos, 0), CStr(intNewCardNumber))
	TracePrint "cardInfoArr(pos,0):", cardInfoArr(pos,0)
	TracePrint "cardInfoArr(searchPos,0):", cardInfoArr(searchPos,0)
	TracePrint "containsNumber1, containsNumber2:", containsNumber1, containsNumber2
	
	If intCardNumber <> 0 And cardInfoArr(pos,0) <> "0" And cardInfoArr(searchPos,0) <> "0" Then
		If intNewCardNumber - 1 = intTopCardNumber And strNewCardSuit <> strTopCardSuit And containsNumber1 = 0 Then 
		
			If pipePos = 0 Then 
				If isExecutedAddSuitToCard = True Then 
					cardInfoArr(pos, 0) = cardInfoArr(pos, 0) & cardInfoArr(pos, 1) & "|" & cardInfoArr(searchPos, 0)
				Else 
					cardInfoArr(pos, 0) = cardInfoArr(pos, 0) & cardInfoArr(pos, 1) & "|" & cardInfoArr(searchPos, 0) & cardInfoArr(searchPos, 1)
				End If
	
			Else 
			 	If isExecutedAddSuitToCard = True Then 
			 		cardInfoArr(pos, 0) = cardInfoArr(pos, 0) & "|" & cardInfoArr(searchPos, 0)
			 	Else
					cardInfoArr(pos, 0) = cardInfoArr(pos, 0) & cardInfoArr(pos, 1) & "|" & cardInfoArr(searchPos, 0)
				End If
			End If
			
//			bottomCardPointArr(pos) = cardInfoArr(searchPos, 0)
//			If InStr(1,cardInfoArr(searchPos, 0), "|") > 0 Then 
//				Dim btma, btmar, btmarv
//				btma = Split(cardInfoArr(searchPos, 0), "|")
//				btmar = btma(Len(btma) - 1)
//				btmarv = Right(btmar, 1)
//				bottomCardPointArr(pos) = btmarv
//			Else 
//				bottomCardPointArr(pos) = cardInfoArr(searchPos, 0)
//			End If
			cardInfoArr(pos, 1) = cardInfoArr(searchPos, 1)
			TracePrint "cardInfoArr(pos,0)-card point:", cardInfoArr(pos,0)
			TracePrint "cardInfoArr(pos,1)-card suit:", cardInfoArr(pos,1)
			TracePrint "Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0)):", Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0))
			
			Delay 100
			
			delayTime = getDelayTime(Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0)))
			TracePrint cardPosArr(searchPos, 0), cardPosArr(pos, 0)
			If cardPosArr(searchPos, 0) < 320 And cardPosArr(pos, 0) > 320 Then 
			 	TracePrint "Move left to right"
				Swipe cardPosArr(searchPos, 0), cardPosArr(searchPos, 1) + 20, cardPosArr(pos, 0) + 30, cardPosArr(pos, 1), delayTime
			ElseIf cardPosArr(searchPos, 0) > 320 And cardPosArr(pos, 0) < 320 Then
				TracePrint "Move right to left"
				If cardPosArr(searchPos, 0)  > 500 Then
					Swipe cardPosArr(searchPos, 0) + 50, cardPosArr(searchPos, 1) + 20, cardPosArr(pos, 0) + 30, cardPosArr(pos, 1), delayTime
				Else
					Swipe cardPosArr(searchPos, 0) + 40, cardPosArr(searchPos, 1) + 20, cardPosArr(pos, 0) + 30, cardPosArr(pos, 1), delayTime
				End If
			Else 
				If cardPosArr(searchPos, 0) > 530 Then
					Swipe cardPosArr(searchPos, 0) + 40, cardPosArr(searchPos, 1) + 20, cardPosArr(pos, 0) + 10, cardPosArr(pos, 1), delayTime
				Else 
				 	If cardPosArr(searchPos, 0) < 320 Then 
						Swipe cardPosArr(searchPos, 0) + 20, cardPosArr(searchPos, 1) + 20, cardPosArr(pos, 0) + 10, cardPosArr(pos, 1), delayTime
					Else
						Swipe cardPosArr(searchPos, 0) + 40, cardPosArr(searchPos, 1) + 20, cardPosArr(pos, 0) + 10, cardPosArr(pos, 1), delayTime
					End If
				End If
			End If
			
			'Update search area
			Call updateSearchAreaRange(searchPos, 30, "up")
			
			'Update card position
			'Call updateCardPosition(searchPos, -10)
			
			Call checkCardAfterMoveCardRule(searchPos, pos, "-1")
			
			suitRule = searchPos
			noSuitableCardMatch = False
		ElseIf intNewCardNumber + 1 = intCardNumber And strNewCardSuit <> strCardSuit And containsNumber2 = 0 Then
			If pipePos = 0 Then 
		 		If InStr(1, cardInfoArr(pos, 0), "|") = 0 Then 
//		 			If isExecutedAddSuitToCard = True Then 
//		 			 	cardInfoArr(searchPos, 0) = cardInfoArr(searchPos, 0) & cardInfoArr(searchPos, 1) & "|" & cardInfoArr(pos, 0)
//		 			Else
						cardInfoArr(searchPos, 0) = cardInfoArr(searchPos, 0) & cardInfoArr(searchPos, 1) & "|" & cardInfoArr(pos, 0) & cardInfoArr(pos, 1)
//					End If
				Else 
					cardInfoArr(searchPos, 0) = cardInfoArr(searchPos, 0) & cardInfoArr(searchPos, 1) & "|" & cardInfoArr(pos, 0)
				End If
			Else 
				If InStr(1, cardInfoArr(pos, 0), "|") = 0 Then 
//					If isExecutedAddSuitToCard = True Then 
//						cardInfoArr(searchPos, 0) = cardInfoArr(searchPos, 0) & "|" & cardInfoArr(pos, 0)
//					Else
						cardInfoArr(searchPos, 0) = cardInfoArr(searchPos, 0) & "|" & cardInfoArr(pos, 0) & cardInfoArr(pos, 1)
//					End If
				Else 
					cardInfoArr(searchPos, 0) = cardInfoArr(searchPos, 0) & "|" & cardInfoArr(pos, 0)
				End If
			End If
//			bottomCardPointArr(searchPos) = cardInfoArr(pos, 0)
//			If InStr(1, cardInfoArr(pos, 0), "|") > 0 Then 
//				Dim btma2, btmar2, btmarv2
//				btma2 = Split(cardInfoArr(pos, 0), "|")
//				btmar2 = btma(Len(btma) - 1)
//				btmarv2 = Right(btmar, 1)
//				bottomCardPointArr(searchPos) = btmarv2
//			Else 
//				bottomCardPointArr(searchPos) = cardInfoArr(pos, 0)
//			End If			
			cardInfoArr(searchPos, 1) = cardInfoArr(pos, 1)
			TracePrint "cardInfoArr(pos,0)-card point:", cardInfoArr(searchPos,0)
			TracePrint "cardInfoArr(pos,1)-card suit:", cardInfoArr(searchPos,1)
			TracePrint "Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0)):", Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0))
			TracePrint "cardPosArr(pos, 0), cardPosArr(pos, 1):", cardPosArr(pos, 0), ",", cardPosArr(pos, 1)
			TracePrint "cardPosArr(searchPos, 0), cardPosArr(searchPos, 1):", cardPosArr(searchPos, 0), ",", cardPosArr(searchPos, 1)
			
			delayTime = getDelayTime(Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0)))
			delayTime2 = getDelayTimeForR2L(Abs(cardPosArr(searchPos, 0) - cardPosArr(pos, 0)))
			
			Delay 100
			
			If cardPosArr(pos, 0) < cardPosArr(searchPos, 0) Then
				Swipe cardPosArr(pos, 0), cardPosArr(pos, 1), cardPosArr(searchPos, 0), cardPosArr(searchPos, 1), delayTime
			Else 
				Swipe cardPosArr(pos, 0) + 50, cardPosArr(pos, 1), cardPosArr(searchPos, 0), cardPosArr(searchPos, 1), delayTime2
			End If
//			If cardPosArr(pos, 0) > 530 Then
//				Swipe cardPosArr(pos, 0) + 40, cardPosArr(pos, 1) + 20, cardPosArr(searchPos, 0) + 10, cardPosArr(searchPos, 1), delayTime
//			Else 
//				If cardPosArr(searchPos, 0) > 530 Then 
//					Swipe cardPosArr(pos, 0) + 20, cardPosArr(pos, 1) + 20, cardPosArr(searchPos, 0) + 30, cardPosArr(searchPos, 1), delayTime + 100
//				Else 
//					If cardPosArr(pos, 0) < 320 Then 
//					 	Delay 50
//						Swipe cardPosArr(pos, 0) + 50, cardPosArr(pos, 1) + 10, cardPosArr(searchPos, 0) + 40, cardPosArr(searchPos, 1), delayTime
//					Else 
//						Delay 50
//						Swipe cardPosArr(pos, 0) + 40, cardPosArr(pos, 1) + 20, cardPosArr(searchPos, 0) + 10, cardPosArr(searchPos, 1), delayTime
//					End If
//				End If
//			End If
			
			'Update search area
			Call updateSearchAreaRange(pos, 30, "up")
			Delay 300
			'Update card position
			'Call updateCardPosition(pos, -10)
			
			Call checkCardAfterMoveCardRule(searchPos, pos, "+1")
			
			suitRule = pos
			noSuitableCardMatch = False
		Else 
			suitRule = pos
			noSuitableCardMatch = True
		End If
	ElseIf cardInfoArr(pos, 0) = "0" Then
		TracePrint "cardInfoArr(pos, 0) = 0"
		suitRule = searchPos
		noSuitableCardMatch = True
	ElseIf cardInfoArr(searchPos, 0) = "0" Then
		TracePrint "cardInfoArr(searchPos, 0) = 0"
		suitRule = pos
		noSuitableCardMatch = True
	End If
	moveCardRule = suitRule
End Function

Sub checkCardAfterMoveCardRule(searchPos, position, flag)
	Dim delayTime
	Dim numberForSearchPos, numberForPos
	Dim arrNumber
	
	Dim tmp(1,3), posx, posy
	Dim tempCardPointSearchArea(4), tempCardSuitSearchArea(4)
	
	While True
		TracePrint "cardInfoArr(searchPos,0):", cardInfoArr(searchPos,0)
		Delay 200
		If flag = "-1" Then 
			Call identifyNewCard(searchPos)
			If cardInfoArr(searchPos, 0) <> "0" Then 
			 	isSearchPosCardChanged = True
				TracePrint "After that, cardInfoArr(searchPos,0):", cardInfoArr(searchPos,0)
			End If
		Else 
			Call identifyNewCard(position)
			If cardInfoArr(position, 0) <> "0" Then 
			 	isPosCardChanged = True
				TracePrint "After that, cardInfoArr(position,0):", cardInfoArr(position,0)
			End If
		End If
		
		If flag = "-1" Then 
			'Compare last element with new card
			Dim arrCard, lastElement, lastElementValue, lastElementSuitColor
			arrCard = Split(cardInfoArr(position, 0), "|")
			lastElement = arrCard(Len(arrCard) - 1)
			lastElementValue = Left(lastElement, Len(lastElement)-1)
			lastElementSuitColor = getSuitColor(Right(lastElement, 1))
			TracePrint "cardInfoArr(position, 0),lastElement,lastElementValue,lastElementSuitColor",cardInfoArr(position, 0),lastElement,lastElementValue,lastElementSuitColor
			isSwapChecked = False
			
			If CInt(lastElementValue) - 1 = CInt(cardInfoArr(searchPos, 0)) And lastElementSuitColor <> cardInfoArr(searchPos, 2) Then 
				delayTime = getDelayTime(Abs(cardPosArr(position, 0) - cardPosArr(searchPos, 0)))
				TracePrint "Swipe again"
				Swipe cardPosArr(searchPos, 0) + 5, cardPosArr(searchPos, 1), cardPosArr(position, 0), cardPosArr(position, 1), delayTime
				cardInfoArr(position, 0) = cardInfoArr(position, 0) & "|" & cardInfoArr(searchPos, 0) & cardInfoArr(searchPos, 1)
//				bottomCardPointArr(position) = cardInfoArr(searchPos, 0)
				isSearchPosCardChanged = False
				'Update search area
				Call updateSearchAreaRange(searchPos, 30, "up")
			Else 
				isSwapChecked = True
				
				TracePrint "Swap searchpos and position"
				TracePrint "searchpos:", searchPos, ",position:", position
				tmp(0, 0) = cardInfoArr(searchPos, 0)
				cardInfoArr(searchPos, 0) = cardInfoArr(position, 0)
				cardInfoArr(position, 0) = tmp(0, 0)
				
				tmp(0, 1) = cardInfoArr(searchPos, 1)
				cardInfoArr(searchPos, 1) = cardInfoArr(position, 1)
				cardInfoArr(position, 1) = tmp(0, 1)
				
				tmp(0, 2) = cardInfoArr(searchPos, 2)
				cardInfoArr(searchPos, 2) = cardInfoArr(position, 2)
				cardInfoArr(position, 2) = tmp(0, 2)
				
				'Update position array
				posx = cardPosArr(searchPos, 0)
				posy = cardPosArr(searchPos, 1)
				cardPosArr(searchPos, 0) = cardPosArr(position, 0)
				cardPosArr(searchPos, 1) = cardPosArr(position, 1)
				cardPosArr(position,0)=posx
				cardPosArr(position, 1) = posy
				
				'Update search area for card point
				tempCardPointSearchArea(0) = cardSearchArea(searchPos,0)
				tempCardPointSearchArea(1) = cardSearchArea(searchPos,1)
				tempCardPointSearchArea(2) = cardSearchArea(searchPos,2)
				tempCardPointSearchArea(3) = cardSearchArea(searchPos,3)
				cardSearchArea(searchPos,0) = cardSearchArea(position,0)
				cardSearchArea(searchPos,1) = cardSearchArea(position,1)
				cardSearchArea(searchPos,2) = cardSearchArea(position,2)
				cardSearchArea(searchPos,3) = cardSearchArea(position,3)
				cardSearchArea(position, 0) = tempCardPointSearchArea(0)
				cardSearchArea(position, 1) = tempCardPointSearchArea(1)
				cardSearchArea(position, 2) = tempCardPointSearchArea(2)
				cardSearchArea(position, 3) = tempCardPointSearchArea(3)
				
				'Update search area for card suit
				tempCardSuitSearchArea(0) = suitSearchArea(searchPos,0)
				tempCardSuitSearchArea(1) = suitSearchArea(searchPos,1)
				tempCardSuitSearchArea(2) = suitSearchArea(searchPos,2)
				tempCardSuitSearchArea(3) = suitSearchArea(searchPos,3)
				suitSearchArea(searchPos,0) = suitSearchArea(position,0)
				suitSearchArea(searchPos,1) = suitSearchArea(position,1)
				suitSearchArea(searchPos,2) = suitSearchArea(position,2)
				suitSearchArea(searchPos, 3) = suitSearchArea(position, 3)
				suitSearchArea(position, 0) = tempCardSuitSearchArea(0)
				suitSearchArea(position, 1) = tempCardSuitSearchArea(1)
				suitSearchArea(position, 2) = tempCardSuitSearchArea(2)
				suitSearchArea(position, 3) = tempCardSuitSearchArea(3)
				
				Exit While
			End If
		ElseIf flag = "+1" Then
			'Compare top element with new card
			Dim arrCard2, topElement, topElementValue, topElementSuitColor
			arrCard2 = Split(cardInfoArr(searchPos, 0), "|")
			topElement = arrCard2(0)
			topElementValue = Left(topElement, Len(topElement)-1)
			topElementSuitColor = getSuitColor(Right(topElement, 1))
			TracePrint "cardInfoArr(searchPos, 0),topElement,topElementValue,topElementSuitColor",cardInfoArr(searchPos, 0),topElement,topElementValue,topElementSuitColor
			
			If CInt(topElementValue) + 1 = CInt(cardInfoArr(position, 0)) And topElementSuitColor <> cardInfoArr(position, 2) Then 
				delayTime = getDelayTime(Abs(cardPosArr(position, 0) - cardPosArr(searchPos, 0)))
				TracePrint "Swipe again"
				Swipe cardPosArr(searchPos, 0) + 5, cardPosArr(searchPos, 1), cardPosArr(position, 0), cardPosArr(position, 1), delayTime
				cardInfoArr(position, 0) = cardInfoArr(position, 0) & cardInfoArr(position, 1) & "|" & cardInfoArr(searchPos, 0)
//				bottomCardPointArr(searchPos) = cardInfoArr(position, 0)
				isPosCardChanged = False
				'Update search area
				Call updateSearchAreaRange(position, 30, "up")
//				'Swap position and searchPos
//				Dim tmp
//				tmp = position
//				position = searchPos
//				searchPos = tmp
			Else 
				Exit While
			End If
		End If
	Wend
	
End Sub

Function moveCardAfterIdentify(pos, flag)
	TracePrint "Position is:", pos
	Dim newPos, newPos1, newPos2
	Dim cardsStr, cardsTopStr, cardsTopSuitColor

	If flag = "top" Then 
//		cardsStr = Split(cardInfoArr(pos, 0), "|")
//		cardsTopStr = Left(cardsStr(0), Len(cardsStr(0)) - 1)
//		cardsTopSuitColor = getSuitColor(Right(cardsStr(0),1))
//		intNewCardNumber = CInt(cardsTopStr)
//		strNewCardSuit = cardsTopSuitColor
//		TracePrint "Flag:Top - NewCardNumber:", intNewCardNumber, ",NewCardSuit:",strNewCardSuit
	Else
		intNewCardNumber = CInt(cardInfoArr(pos, 0))
		strNewCardSuit = cardInfoArr(pos, 2)
		TracePrint "strNewCardNumber", cardInfoArr(pos, 0)
//		If isExecutedAddSuitToCard = True Then 
//			intNewCardNumber = Left(cardInfoArr(pos, 0), Len(cardInfoArr(pos, 0))-1)
//		End If
		TracePrint "NewCardNumber:", intNewCardNumber, ",NewCardSuit:",strNewCardSuit
	End If
	
	If intNewCardNumber <> 0 Then
		If pos = 0 Or pos = 6 Then 
			Dim startStep, endStep
			If pos = 0 Then 
				startStep = 1
				endStep = 6
				For p = startStep To endStep
					newPos = moveCardRule(pos, p, intNewCardNumber, strNewCardSuit)
	//				If newPos = pos Then 
	//					Exit For
	//				End If
				Next
			ElseIf pos = 6 Then
				startStep = 5
				endStep = 0
				For p = startStep To endStep Step -1
					newPos = moveCardRule(pos, p, intNewCardNumber, strNewCardSuit)
	//				If newPos = pos Then 
	//					Exit For
	//				End If
				Next
			End If
			
	//		For p = startStep To endStep
	//			newPos = moveCardRule(pos, p, intNewCardNumber, strNewCardSuit)
	//			If newPos <> -1 Then 
	//				Exit For
	//			End If
	//		Next 
		Else 
			For k = pos + 1 To 6
				newPos1 = moveCardRule(pos, k, intNewCardNumber, strNewCardSuit)
				TracePrint "newPos1:", newPos1
				
				Call checkCardIfChanged(pos, k)
	//			While newPos1 <> pos
	//				Call identifyNewCard(newPos1)
	//				newPos1 = moveCardAfterIdentify(newPos1, "")
	//			Wend
	//			If newPos1 = pos Then 
	//				Exit For
	//			End If
			Next
	
	//		TracePrint "newPos1:", newPos1
	//		While newPos1 <> pos
	//			Call identifyNewCard(newPos1)
	//			newPos1 = moveCardAfterIdentify(newPos1)
	//		Wend
			
			For j = pos - 1 To 0 Step -1
				newPos2 = moveCardRule(pos, j, intNewCardNumber, strNewCardSuit)
				
				Call checkCardIfChanged(pos, j)
	//			If newPos2 <> pos Then 
	//				Exit For
	//			End If
			Next
			newPos = newPos2
	//		If newPos1 <> -1 And newPos2 <> -1 Then 
	//			newPos1 = moveCardAfterIdentify(newPos1)
	//			newPos2 = moveCardAfterIdentify(newPos2)
	//			newPos = CStr(newPos1) & "|" & CStr(newPos2)
	//		ElseIf newPos1 = -1 And newPos2 <> -1 Then
	//			newPos = newPos2
	//		ElseIf newPos2 = -1 And newPos1 <> -1 Then
	//			newPos = newPos1
	//		Else 
	//			newPos = -1
	//		End If
		End If
	End If
	isSwapChecked = False
	moveCardAfterIdentify = newPos
End Function

Sub checkCardIfChanged(pos, searchPos)
	If isSearchPosCardChanged = True Then 
		intNewCardNumber = CInt(cardInfoArr(searchPos, 0))
		strNewCardSuit = cardInfoArr(searchPos, 2)
		isSearchPosCardChanged = False
	ElseIf isPosCardChanged = True Then 
		intNewCardNumber = CInt(cardInfoArr(pos, 0))
		strNewCardSuit = cardInfoArr(pos, 2)
		isPosCardChanged = False
	End If	
End Sub

Sub identifyPileCard(index)
	Dim intX, intY
	Dim cardPoint
	Dim noCard
	
	noCard = True
	
	Delay 200
	
	TracePrint "Finding card in (", pileSearchArea(index,0), pileSearchArea(index,1), pileSearchArea(index,2), pileSearchArea(index,3), ") pile area"
	For m = 0 To UBound(allCardPicArr)
		'Search card
		FindPic pileSearchArea(index,0), pileSearchArea(index,1), pileSearchArea(index,2), pileSearchArea(index,3), "Attachment:" & allCardPicArr(m), "000000", 0, 0.4, intX, intY
//		TracePrint "allCardPicArr(m):", allCardPicArr(m)
		If intX > 0 And intY > 0 Then
			'Get card point
			cardPoint = Mid(allCardPicArr(m), 2, InStr(1, allCardPicArr(m), ".") - 2)
			TracePrint "Found card: ", cardPoint
			
			If index = 0 And cardPoint = "13" And isFoundAnyCardMovedInACycle = False Then 
				isKAvailable = True	
			End If
			
			pileCardInfoArr(index, 0) = cardPoint
			TracePrint "index,pileCardInfoArr", index, pileCardInfoArr(index,0)
			
			
			Delay 500
			
			'Search suit
			TracePrint "Finding suit in (", pileSuitSearchArea(index,0), pileSuitSearchArea(index,1), pileSuitSearchArea(index,2), pileSuitSearchArea(index,3), ") pile area"
			For s = 0 To UBound(suitPicArr)
				FindPic pileSuitSearchArea(index,0), pileSuitSearchArea(index,1), pileSuitSearchArea(index,2), pileSuitSearchArea(index,3), "Attachment:" & suitPicArr(s), "000000", 0, 0.4, intX, intY
				If intX > 0 And intY > 0 Then 
					TracePrint "Found suit: ", suitPicArr(s)
					'Save suit info
					pileCardInfoArr(index, 1) = convertSuitColorToSign(suitPicArr(s))
					'Save suit color(Black/Red)
					pileCardInfoArr(index, 2) = checkSuitBlackOrRed(suitPicArr(s))
					TracePrint "Found suit color:", pileCardInfoArr(index,2)
					
					'Move it to foundation if the card is A
					If pileCardInfoArr(index, 0) = "1" Then 
						TracePrint "=1"
						Call moveToSpecificFoundationAreaAndUpdate(index, getSuitPosition(pileCardInfoArr(index, 1)), pileCardInfoArr(index, 0), pileCardInfoArr(index, 1), 1, "PILE")
						Delay 200
						isFoundAnyCardMovedInACycle = True
						Call identifyPileCard(index)
					End If
					noCard = False
					Delay 100
					Exit Sub
				End If
			Next
//			If noCard = False Then 
//				Exit For
//			End If
		Else 
		 	noCard = True
		End If 
	Next
	
	If noCard = True Then 
		pileCardInfoArr(index, 0) = "0"	
	End If
	
End Sub

Sub identifyNewCard(j)
	Dim intX, intY
	Dim cardPoint
	Dim noCard
	
	noCard = False
	
	Delay 500
	
	TracePrint "Finding card in (", cardSearchArea(j,0), cardSearchArea(j,1), cardSearchArea(j,2), cardSearchArea(j,3), ") area"
	For m = 0 To UBound(allCardPicArr)
		'Search again after the card is moved
		FindPic cardSearchArea(j, 0), cardSearchArea(j, 1), cardSearchArea(j, 2), cardSearchArea(j, 3), "Attachment:" & allCardPicArr(m), "000000", 0, 0.5, intX, intY
//		TracePrint "allCardPicArr(m):", allCardPicArr(m)
		If intX > 0 And intY > 0 Then
			'Get card point
			cardPoint = Mid(allCardPicArr(m), 2, InStr(1, allCardPicArr(m), ".") - 2)
			TracePrint "Found card: ", cardPoint
			cardPosArr(j, 0) = intX + 15
			cardPosArr(j, 1) = intY + 15
			
			If CInt(cardPoint) = intNewCardNumber Then 
				isCardHasBeenIdentifed = True
				intNewCardNumber = -1
				Exit Sub
			Else 
				isCardHasBeenIdentifed = False
			End If
			
			cardInfoArr(j, 0) = cardPoint
//			bottomCardPointArr(j) = cardPoint
//			TracePrint "bottomCardPointArr", j, ":", bottomCardPointArr(j)
			
			'Search suit
			Dim isSuitFound
			isSuitFound = False
			TracePrint "Finding suit in (", suitSearchArea(j,0), suitSearchArea(j,1), suitSearchArea(j,2), suitSearchArea(j,3), ") area"
			For s = 0 To UBound(suitPicArr)
				FindPic suitSearchArea(j,0), suitSearchArea(j,1), suitSearchArea(j,2), suitSearchArea(j,3), "Attachment:" & suitPicArr(s), "000000", 0, 0.4, intX, intY
				If intX > 0 And intY > 0 Then 
					TracePrint "Found suit: ", suitPicArr(s)
					isSuitFound = True
					'Save suit info
					cardInfoArr(j, 1) = convertSuitColorToSign(suitPicArr(s))
					'Save suit color(Black/Red)
					cardInfoArr(j, 2) = checkSuitBlackOrRed(suitPicArr(s))
					TracePrint "Found suit:", cardInfoArr(j,1)
					TracePrint "Found suit color:", cardInfoArr(j,2)
					
					'Move it to foundation if the card is A
					If cardInfoArr(j, 0) = "1" Then 
						Call moveToSpecificFoundationAreaAndUpdate(j, getSuitPosition(cardInfoArr(j, 1)), cardInfoArr(j, 0), cardInfoArr(j, 1), 1, "")
						Delay 200
						Call identifyNewCard(j)
					End If
					
					TracePrint "cardInfoArr(j,0), cardInfoArr(j,1)", cardInfoArr(j,0), cardInfoArr(j,1)
					'Add suit
//					If isExecutedAddSuitToCard = True Then 
//						cardInfoArr(j,0) = cardInfoArr(j,0) & cardInfoArr(j,1)	
//					End If
					Exit For
				End If
			Next
			
			If isSuitFound = False Then 
				Exit Sub
			End If
			
			noCard = False
			Exit For
		Else 
//			TracePrint "Trying to locate if there is no card"
//		 	FindPic cardSearchArea(j, 0), cardSearchArea(j, 1), cardSearchArea(j, 2), cardSearchArea(j, 3), "Attachment:" & "emptySlot.png", "000000", 0, 0.3, intX, intY
//		 	Delay 200
//		 	If intX > 0 And intY > 0 Then 
//		 		TracePrint "There is no card in the slot"
//				noCard = True
//				Exit For
//			End If
			noCard = True
		End If 
	Next
	
	Dim numberOfPosition
	If noCard = True Then 
		cardInfoArr(j, 0) = "0"
//		bottomCardPointArr(j) = "0"
		
		isCardHasBeenIdentifed = True
		
		'numberOfPosition = getActualPosition(cardSearchArea(j,0))
		isEverEmptyPos(j) = True
		
		'TracePrint "numberOfPosition,isEverEmptyPos(numberOfPosition):", numberOfPosition, ",", isEverEmptyPos(numberOfPosition)
		
		emptySpotCount = emptySpotCount + 1
		If emptySpotPos = "" Then 
			emptySpotPos = j
		Else 
			emptySpotPos = emptySpotPos & "|" & j
		End If
		TracePrint "emptySpotCount:", emptySpotCount, ",emptySpotPos:", emptySpotPos
		noCard = False
	End If
End Sub

Function getActualPosition(cardPosition)
	If cardPosition = 0 Then 
		getActualPosition = 0
	ElseIf cardPosition = 92 Then
		getActualPosition = 1
	ElseIf cardPosition = 184 Then
		getActualPosition = 2
	ElseIf cardPosition = 276 Then
		getActualPosition = 3
	ElseIf cardPosition = 368 Then
		getActualPosition = 4
	ElseIf cardPosition = 460 Then
		getActualPosition = 5
	ElseIf cardPosition = 552 Then
		getActualPosition = 6
	Else 
		getActualPosition = 0
	End If	
End Function

Function moveKCard(emptyIndex, pileIndex, flag)
	TracePrint "Move K Card..."
	Dim emptySpotPosArr, newPosition, isHavingPipe, element, elementArr
	Dim topElementForPile, topElementSuitForPile
	Dim aPos
	Dim topEleArr
	
	emptySpotPosArr = Split(emptySpotPos, "|")
	If pileIndex <> "" Then 
		If pileCardInfoArr(pileIndex, 0) = "13" Then 
			If flag = "FINAL" And emptySpotCount >=1 Then 
				Swipe pilePosArr(pileIndex, 0), pilePosArr(pileIndex, 1), cardPosArr(emptyIndex, 0), cardPosArr(emptyIndex, 1), 500
//				aPos = getActualPosition(cardSearchArea(emptyIndex, 0))
				isEverEmptyPos(emptyIndex) = True
				cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1)
				cardInfoArr(emptyIndex, 1) = pileCardInfoArr(pileIndex, 1)
				cardInfoArr(emptyIndex, 2) = pileCardInfoArr(pileIndex, 2)	
				emptySpotCount = emptySpotCount - 1
				isFoundInTableau = True
				isFoundAnyCardMovedInACycle = True
				moveKCard = True
				Exit Function
			ElseIf emptySpotCount = 1 Then
				For t = 0 To 6
                    If t <> emptyIndex Then
						topEleArr = Split(cardInfoArr(t, 0), "|")
						topElementForPile = Left(topEleArr(0), Len(topEleArr(0)) - 1)
						If InStr(1, cardInfoArr(t, 0), "|") > 0 Or isExecutedAddSuitToCard = True Then 
							topElementSuitForPile = Right(topEleArr(0), 1)
						Else 
							topElementSuitForPile = cardInfoArr(t, 1)
						End If
													
						TracePrint "moveKcard:topelement,topElementSuit, pileCardInfoArr(pileIndex, 1):", topElementForPile, topElementSuitForPile, pileCardInfoArr(pileIndex, 1)
						If topElementForPile = "12" And getSuitColor(topElementSuitForPile) <> pileCardInfoArr(pileIndex, 2) Then 
							Swipe pilePosArr(pileIndex, 0), pilePosArr(pileIndex, 1), cardPosArr(emptyIndex, 0), cardPosArr(emptyIndex, 1), 500
//							aPos = getActualPosition(cardSearchArea(emptyIndex, 0))
							isEverEmptyPos(emptyIndex) = True
							
							Delay 100
							If cardPosArr(t, 0) > 530 Then
								Swipe cardPosArr(t, 0) + 40, cardPosArr(t, 1) + 20, cardPosArr(emptyIndex, 0) + 10, cardPosArr(emptyIndex, 1), 800
							Else 
							 	Swipe cardPosArr(t, 0) + 30, cardPosArr(t, 1) + 20, cardPosArr(emptyIndex, 0) + 10, cardPosArr(emptyIndex, 1), 600
							End If
							Delay 100
							
							If Instr(1, cardInfoArr(t,0), "|") > 0 Then
								cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1) & "|" & cardInfoArr(t, 0)
							Else 
								If Right(cardInfoArr(t,0),1) = "S" Or Right(cardInfoArr(t,0),1) = "H" Or Right(cardInfoArr(t,0),1) = "C" Or Right(cardInfoArr(t,0),1) = "D" Then
									cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1) & "|" & cardInfoArr(t, 0)
								Else 
									cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1) & "|" & cardInfoArr(t, 0) & cardInfoArr(t, 1)
								End If
							End If
							cardInfoArr(emptyIndex, 1) = pileCardInfoArr(pileIndex, 1)
							cardInfoArr(emptyIndex, 2) = pileCardInfoArr(pileIndex, 2)
							emptySpotCount = emptySpotCount - 1
							
							Call updateSearchAreaRange(t, 30, "up")
							Call updateCardPosition(t, -10)
							
							Call identifyNewCard(t)
							
							isFoundInTableau = True
							isFoundAnyCardMovedInACycle = True
							moveKCard = True
							Exit Function
						End If
					ElseIf isKAvailable = True Then
						Swipe pilePosArr(pileIndex, 0), pilePosArr(pileIndex, 1), cardPosArr(emptyIndex, 0), cardPosArr(emptyIndex, 1), 500
//						aPos = getActualPosition(cardSearchArea(emptyIndex, 0))
						isEverEmptyPos(emptyIndex) = True
						
						Delay 100
						
						cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0)
						cardInfoArr(emptyIndex, 1) = pileCardInfoArr(pileIndex, 1)
						cardInfoArr(emptyIndex, 2) = pileCardInfoArr(pileIndex, 2)
						emptySpotCount = emptySpotCount - 1
						
						isFoundInTableau = True
						isFoundAnyCardMovedInACycle = True
						isKAvailable = False
					Else 
						isKAvailable = False
					End If
				Next
			ElseIf emptySpotCount >= 2 Then
				Swipe pilePosArr(pileIndex, 0), pilePosArr(pileIndex, 1), cardPosArr(emptyIndex, 0), cardPosArr(emptyIndex, 1), 500
//				aPos = getActualPosition(cardSearchArea(emptyIndex, 0))
				isEverEmptyPos(emptyIndex) = True
				cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1)
				cardInfoArr(emptyIndex, 1) = pileCardInfoArr(pileIndex, 1)
				cardInfoArr(emptyIndex, 2) = pileCardInfoArr(pileIndex, 2)
				emptySpotCount = emptySpotCount - 1
				isFoundInTableau = True
				isFoundAnyCardMovedInACycle = True
				moveKCard = True
				Exit Function
			ElseIf emptySpotCount = 1 And cycletimes >= 3 Then
				TracePrint "cycletimes:", cycletimes
				For m = 0 To 6
					Dim arrElement,topElementValue, topElementSuit
					arrElement = Split(cardInfoArr(m, 0), "|")
					If Len(arrElement) = 1 Then 
						If isExecutedAddSuitToCard = False Then 
							topElementValue = arrElement(0)
							topElementSuit = cardInfoArr(m, 1)
						Else 
							topElementValue = Left(arrElement(0), Len(arrElement(0)) - 1)
							topElementSuit = Right(arrElement(0),1)
						End If
					Else 
						topElementValue = Left(arrElement(0), Len(arrElement(0)) - 1)
						topElementSuit = Right(arrElement(0),1)
					End If
					
					If CInt(pileCardInfoArr(pileIndex, 0)) - 1 = CInt(topElementValue) And pileCardInfoArr(pileIndex, 2) <> getSuitColor(topElementSuit) Then 
						Swipe pilePosArr(pileIndex, 0), pilePosArr(pileIndex, 1), cardPosArr(emptyIndex, 0), cardPosArr(emptyIndex, 1), 500
//						aPos = getActualPosition(cardSearchArea(emptyIndex, 0))
						isEverEmptyPos(emptyIndex) = True
						Delay 100
						If cardPosArr(m, 0) > 530 Then
							Swipe cardPosArr(m, 0) + 40, cardPosArr(m, 1) + 20, cardPosArr(emptyIndex, 0) + 10, cardPosArr(emptyIndex, 1), 800
						Else 
							Swipe cardPosArr(m, 0) + 30, cardPosArr(m, 1) + 20, cardPosArr(emptyIndex, 0) + 10, cardPosArr(emptyIndex, 1), 600
						End If
							
						Delay 100
						
						If Instr(1, cardInfoArr(m,0), "|") > 0 Then
							cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1) & "|" & cardInfoArr(m, 0)
						Else 
						 	If Right(cardInfoArr(m,0),1) = "S" Or Right(cardInfoArr(m,0),1) = "H" Or Right(cardInfoArr(m,0),1) = "C" Or Right(cardInfoArr(m,0),1) = "D" Then 
						 		cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1) & "|" & cardInfoArr(m, 0)
						 	Else 
						 	 	cardInfoArr(emptyIndex, 0) = pileCardInfoArr(pileIndex, 0) & pileCardInfoArr(pileIndex, 1) & "|" & cardInfoArr(m, 0) & cardInfoArr(m, 1)
						 	End If
						End If
						
						cardInfoArr(emptyIndex, 1) = pileCardInfoArr(pileIndex, 1)
						cardInfoArr(emptyIndex, 2) = pileCardInfoArr(pileIndex, 2)
						
						Call updateSearchAreaRange(m, 30, "up")
						Call updateCardPosition(m, -10)
						
						Call identifyNewCard(m)
						
						isFoundInTableau = True
						isFoundAnyCardMovedInACycle = True
						emptySpotCount = emptySpotCount - 1
						moveKCard = True
						Exit Function
					End If
				Next
			End If	
		End If	
	Else
		For m = 0 To 6
			isHavingPipe = InStr(1, cardInfoArr(m, 0), "|")
			If isHavingPipe > 0 Then 
				elementArr = Split(cardInfoArr(m, 0), "|")
				element = Left(elementArr(0), Len(elementArr(0))-1)
//			ElseIf isExecutedAddSuitToCard = True Then
//				element = Left(cardInfoArr(m, 0), Len(cardInfoArr(m, 0)) - 1)
			Else 
				If Right(cardInfoArr(m, 0), 1) = "S" Or Right(cardInfoArr(m, 0), 1) = "H" Or Right(cardInfoArr(m, 0), 1) = "C" Or Right(cardInfoArr(m, 0), 1) = "D" Then 
					element = Left(cardInfoArr(m, 0), Len(cardInfoArr(m,0)) - 1)
				Else
					element = cardInfoArr(m, 0)
				End If
			End If
			
			Dim emptySPA
			TracePrint "top element:", element
			'TracePrint "emptySpotPosArr(0):", emptySpotPosArr(0)
			If element = "13" And flag = "FINAL" And emptySpotCount >= 1 Then 
				For t = 0 To 6
					If cardInfoArr(t, 0) = "0" Then 
						emptySPA = t
						Exit For
					End If
				Next
				
				TracePrint "m,isEverEmptyPos(m):", m, ",", isEverEmptyPos(m)
				If isEverEmptyPos(m) <> True Then
					Swipe cardPosArr(m, 0) + 20, cardPosArr(m, 1) + 20, cardPosArr(emptySPA, 0), cardPosArr(emptySPA, 1), 1000
	//				Else 
	//					Exit For
					isEverEmptyPos(emptySPA) = True
	//				ElseIf emptySpotCount >= 2 Then 	
	//				If isHavingPipe > 0 Then 
	//					Swipe cardPosArr(m, 0) + 20, cardPosArr(m, 1), cardPosArr(CInt(emptySpotPosArr(0)), 0), cardPosArr(CInt(emptySpotPos(0)), 1), 500
	//				Else 
	//					Tap cardPosArr(m, 0), cardPosArr(m, 1)
	//				End If
					If Right(cardInfoArr(m, 0), 1) = "S" Or Right(cardInfoArr(m, 0), 1) = "H" Or Right(cardInfoArr(m, 0), 1) = "C" Or Right(cardInfoArr(m, 0), 1) = "D" Then 
						cardInfoArr(emptySPA, 0) = cardInfoArr(m, 0)
					Else 
						cardInfoArr(emptySPA, 0) = cardInfoArr(m, 0) & cardInfoArr(m, 1)
					End If
	//				bottomCardPointArr(emptySPA) = cardInfoArr(m, 0)
					cardInfoArr(emptySPA, 1) = cardInfoArr(m, 1)
					cardInfoArr(emptySPA, 2) = cardInfoArr(m, 2)
	//				TracePrint "1emptySpotCount:", emptySpotCount, ", emptySpotPos:", emptySpotPos
					Delay 100
					emptySpotCount = emptySpotCount - 1
					TracePrint "after moving, emptySpotCount:", emptySpotCount
	//				If Len(emptySpotPosArr) <> 1 Then
	//					emptySpotPos = Right(emptySpotPos, Len(emptySpotPos) - Len(emptySpotPosArr(0)) - 1)
	//				End If
	//				TracePrint "2emptySpotCount:", emptySpotCount, ", emptySpotPos:", emptySpotPos
									
	//				If emptySpotCount = 0 Then 
	//					emptySpotPos = ""
	//				End If
					
					Delay 200
					
					Call updateSearchAreaRange(m, 30, "up")
					Call updateCardPosition(m, -10)
					
					'Check if there is any card needed to identify
					Call identifyNewCard(m)
					
					Dim oldPosition
								
					oldPosition = m
					newPosition = m
					
					'Check if there is a match
					While cardInfoArr(newPosition, 0) <> "0" Or isCardHasBeenIdentifed = False
						newPosition = moveCardAfterIdentify(oldPosition,"")
						If newPosition <> oldPosition Or noSuitableCardMatch = False Then 
							oldPosition = newPosition
							noSuitableCardMatch = True
							Call identifyNewCard(newPosition)
						Else 
							Exit While
						End If
					Wend
				End If
			End If
		Next
	End If
	moveKCard = False
End Function

Function getSuitColor(strSuit)
	Dim strSuitSign
	If strSuit = "S" Or strSuit = "C" Then 
		strSuitSign = "B"
	ElseIf strSuit = "H" Or  strSuit = "D" Then
		strSuitSign = "R"
	End If
	
	getSuitColor = strSuitSign	
End Function

Function checkSuitBlackOrRed(strSuit)
	Dim strSuitColor
	If strSuit = "spade.png" Or strSuit = "club.png" Then 
		strSuitColor = "B"
	ElseIf strSuit = "heart.png" Or strSuit = "diamond.png" Then
		strSuitColor = "R"
	End If
	
	checkSuitBlackOrRed = strSuitColor	
End Function

Function convertSuitColorToSign(strSuit)
	Dim strSuitSign
	If strSuit = "spade.png" Then 
		strSuitSign = "S"
	ElseIf strSuit = "club.png" Then
		strSuitSign = "C"
	ElseIf strSuit = "heart.png" Then
		strSuitSign = "H"
	ElseIf strSuit = "diamond.png" Then
		strSuitSign = "D"
	End If
	
	convertSuitColorToSign = strSuitSign
End Function

Sub sortMaxToMin()
	Dim a, b
	Dim posx, posy
	Dim temp, suitTemp, suitColorTemp
	Dim tempCardPointSearchArea(4), tempCardSuitSearchArea(4)
	Dim arrA, arrB
//	Dim tempBottomValue
	Dim tempForEmpty
	
	For i = 0 To 5
		For j = i + 1 To 6
			arrA = Split(cardInfoArr(i,0), "|")
			If Len(arrA) > 1 Then 
				a = CInt(Left(arrA(0), Len(arrA(0)) - 1))
				'TracePrint "Len>1, a:", a
			Else 
			 	If isExecutedAddSuitToCard = True Then 
			 	 	If Len(arrA(0)) = 3 Then 
			 	 		a = CInt(Left(arrA(0), 2))
					Else
			 			a = CInt(Left(arrA(0), 1))
			 		End If
			 	Else
					a = CInt(arrA(0))
				End If
				'TracePrint "Len<1, a:", a
			End If
			
			arrB = Split(cardInfoArr(j,0), "|")
			If Len(arrB) > 1 Then 
				b = CInt(Left(arrB(0), Len(arrB(0)) - 1))
			Else 
				If isExecutedAddSuitToCard = True Then 
					If Len(arrA(0)) = 3 Then 
						b = CInt(Left(arrB(0), 2))
					Else
						b = CInt(Left(arrB(0), 1))
					End If
				Else
					b = CInt(arrB(0))
				End If
			End If
			
			'TracePrint "a:", a, ", b:", b
			
			If a < b Then 
				temp = cardInfoArr(i, 0)
				cardInfoArr(i, 0) = cardInfoArr(j, 0)
				cardInfoArr(j, 0) = temp
				
				'Update empty position
				tempForEmpty = isEverEmptyPos(i)
				isEverEmptyPos(i) = isEverEmptyPos(j)
				isEverEmptyPos(j) = tempForEmpty
				'Update bottom value
//				tempBottomValue = bottomCardPointArr(i)
//				bottomCardPointArr(i) = bottomCardPointArr(j)
//				bottomCardPointArr(j) = tempBottomValue
				
				'Update position array
				posx = cardPosArr(i, 0)
				posy = cardPosArr(i, 1)
				cardPosArr(i, 0) = cardPosArr(j, 0)
				cardPosArr(i, 1) = cardPosArr(j, 1)
				cardPosArr(j,0)=posx
				cardPosArr(j, 1) = posy
				
				'Update suit info
				suitTemp = cardInfoArr(i, 1)
				cardInfoArr(i, 1) = cardInfoArr(j, 1)
				cardInfoArr(j, 1) = suitTemp
				
				'Update suit color info
				suitColorTemp = cardInfoArr(i, 2)
				cardInfoArr(i, 2) = cardInfoArr(j, 2)
				cardInfoArr(j, 2) = suitColorTemp
				
				'Update search area for card point
				tempCardPointSearchArea(0) = cardSearchArea(i,0)
				tempCardPointSearchArea(1) = cardSearchArea(i,1)
				tempCardPointSearchArea(2) = cardSearchArea(i,2)
				tempCardPointSearchArea(3) = cardSearchArea(i,3)
				cardSearchArea(i,0) = cardSearchArea(j,0)
				cardSearchArea(i,1) = cardSearchArea(j,1)
				cardSearchArea(i,2) = cardSearchArea(j,2)
				cardSearchArea(i, 3) = cardSearchArea(j, 3)
				cardSearchArea(j, 0) = tempCardPointSearchArea(0)
				cardSearchArea(j, 1) = tempCardPointSearchArea(1)
				cardSearchArea(j, 2) = tempCardPointSearchArea(2)
				cardSearchArea(j, 3) = tempCardPointSearchArea(3)
				
				'Update search area for card suit
				tempCardSuitSearchArea(0) = suitSearchArea(i,0)
				tempCardSuitSearchArea(1) = suitSearchArea(i,1)
				tempCardSuitSearchArea(2) = suitSearchArea(i,2)
				tempCardSuitSearchArea(3) = suitSearchArea(i,3)
				suitSearchArea(i,0) = suitSearchArea(j,0)
				suitSearchArea(i,1) = suitSearchArea(j,1)
				suitSearchArea(i,2) = suitSearchArea(j,2)
				suitSearchArea(i, 3) = suitSearchArea(j, 3)
				suitSearchArea(j, 0) = tempCardSuitSearchArea(0)
				suitSearchArea(j, 1) = tempCardSuitSearchArea(1)
				suitSearchArea(j, 2) = tempCardSuitSearchArea(2)
				suitSearchArea(j, 3) = tempCardSuitSearchArea(3)
			End If
		Next 
	Next 
End Sub

Sub finalCheck()
	TracePrint "Starting final check..."
	Call sortMaxToMin()
	Call moveKCard("", "", "FINAL")
	Call main()
	Call moveCardToFoundation()
	
//	Call addSuitToCard()
	
	If isCardMovedInTableauOrFoundation = True Then
		Call moveCardFromWastePile()
	
		For i = 0 To 6
			If cardInfoArr(i,0) = "0" Then
				Call moveKCard(i, globalPileIndex, "FINAL")
				Call sortMaxToMin()
				Call main()
				Exit For
			End If
		Next
		
		Call moveKCard("", "", "FINAL")
		Call sortMaxToMin()
		Call main()
		Call moveCardToFoundation()
	End If

End Sub

Sub init()
	isKAvailable = False
	compareCounter = 1
	emptySpotCount = 0
	emptySpotPos = ""
	noSuitableCardMatch = False
	isSearchPosCardChanged = False
	isPosCardChanged = False
	isCardHasBeenIdentifed = False
	For m = 0 To 3
		foundationInfoArr(m, 0) = "0"
		foundationInfoArr(m, 1) = "0"
	Next
	foundationPosArr(0,0) = 5
	foundationPosArr(0,1) = 158
	foundationPosArr(1,0) = 110
	foundationPosArr(1,1) = 158
	foundationPosArr(2,0) = 210
	foundationPosArr(2,1) = 158
	foundationPosArr(3,0) = 322
	foundationPosArr(3, 1) = 158
	
	pilePosArr(0, 0) = 497
	pilePosArr(0, 1) = 149
	pilePosArr(1, 0) = 454
	pilePosArr(1, 1) = 149
	pilePosArr(2, 0) = 411
	pilePosArr(2, 1) = 149
	
	For pileI = 0 To 2
		pileCardInfoArr(pileI, 0) = "0"
		pileCardInfoArr(pileI, 1) = "0"
		pileCardInfoArr(pileI, 2) = "0"
	Next
	pileSearchArea(0,0) = 453
	pileSearchArea(0,1) = 100
	pileSearchArea(0,2) = 502
	pileSearchArea(0,3) = 148
	pileSuitSearchArea(0,0) = 502 
	pileSuitSearchArea(0,1) = 100
	pileSuitSearchArea(0,2) = 540
	pileSuitSearchArea(0,3) = 148
	
	pileSearchArea(1,0) = 414
	pileSearchArea(1,1) = 100
	pileSearchArea(1,2) = 458
	pileSearchArea(1,3) = 148
	pileSuitSearchArea(1,0) = 464
	pileSuitSearchArea(1,1) = 100
	pileSuitSearchArea(1,2) = 503
	pileSuitSearchArea(1,3) = 148
	
	pileSearchArea(2,0) = 376
	pileSearchArea(2,1) = 100
	pileSearchArea(2,2) = 430
	pileSearchArea(2,3) = 148
	pileSuitSearchArea(2,0) = 414
	pileSuitSearchArea(2,1) = 100
	pileSuitSearchArea(2,2) = 468
	pileSuitSearchArea(2, 3) = 148
	allCardPicArr = Array("b1.png", "r1.png", "b2.png", "r2.png", "b3.png", "r3.png", "b4.png", "r4.png", "b5.png", "r5.png", "b6.png", "r6.png", "b7.png", _
	"r7.png", "b8.png", "r8.png", "b9.png", "r9.png", "b10.png", "r10.png", "b11.png", "r11.png", "b12.png", "r12.png", "b13.png", "r13.png")
	
	suitPicArr = Array("spade.png", "heart.png", "club.png", "diamond.png")
	isFoundAnyCardMovedInACycle = False
	isMoved = False
	isFirstGroupInACycle = True
	isFoundInTableau = False
	isExecutedAddSuitToCard = False
	isCardMovedInTableauOrFoundation = False
	
	leftUpperCornerX = 0
	leftUpperCornerY = 260
	rightUpperCornerX = 45
	rightUpperCornerY = 310
	leftUpperCornerXForSuit = 45
	leftUpperCornerYForSuit = 260
	rightUpperCornerXForSuit = 93
	rightUpperCornerYForSuit = 310
	
	offsetX1 = 92
	offsetX2 = 95
	offsetY1 = 10
	offsetY2 = 30
	
	tmpIndex = 0
	
	For e = 0 To 6
		isEverEmptyPos(e) = False
	Next
	
	For i = 0 To 6
		TracePrint "Finding card in (", leftUpperCornerX, leftUpperCornerY, rightUpperCornerX, rightUpperCornerY, ") area"
		For j = 0 To UBound(allCardPicArr)
			FindPic leftUpperCornerX, leftUpperCornerY, rightUpperCornerX, rightUpperCornerY, "Attachment:" & allCardPicArr(j), "000000", 0, 0.5, intX, intY
	//		TracePrint "Finding ", allCardPicArr(j), " in (", leftUpperCornerX, leftUpperCornerY, rightUpperCornerX, rightUpperCornerY, ") area"
			If intX > 0 And intY > 0 Then 
				'Get card point
				cardPoint = Mid(allCardPicArr(j), 2, InStr(1, allCardPicArr(j), ".") - 2) 
//				TracePrint "Found card: ", cardPoint
				'Save card info
				cardInfoArr(i, 0) = cardPoint
//				bottomCardPointArr(i) = cardPoint
				cardPosArr(i, 0) = intX
				cardPosArr(i, 1) = intY
//				cardPosArr(i, 0) = intX + 15
//				cardPosArr(i, 1) = intY + 15
				cardSearchArea(i,0) = leftUpperCornerX
				cardSearchArea(i,1) = leftUpperCornerY
				cardSearchArea(i,2) = rightUpperCornerX
				cardSearchArea(i, 3) = rightUpperCornerY
				
				TracePrint "Finding suit in (", leftUpperCornerXForSuit, leftUpperCornerYForSuit, rightUpperCornerXForSuit, rightUpperCornerYForSuit, ") area"
				
				For m = 0 To UBound(suitPicArr)
					'Search suit
					FindPic leftUpperCornerXForSuit, leftUpperCornerYForSuit, rightUpperCornerXForSuit, rightUpperCornerYForSuit, "Attachment:" & suitPicArr(m), "000000", 0, 0.4, intX, intY
					If intX > 0 And intY > 0 Then 
//						TracePrint "Found suit: ", suitPicArr(m)
						'Save suit info
						cardInfoArr(i, 1) = convertSuitColorToSign(suitPicArr(m))
						'Save suit color(Black/Red)
						cardInfoArr(i, 2) = checkSuitBlackOrRed(suitPicArr(m))
//						TracePrint "Found suit color: ", cardInfoArr(i, 2)
						
						suitSearchArea(i,0) = leftUpperCornerXForSuit
						suitSearchArea(i,1) = leftUpperCornerYForSuit
						suitSearchArea(i,2) = rightUpperCornerXForSuit
						suitSearchArea(i,3) = rightUpperCornerYForSuit
						
						Exit For
					End If
				Next
				Exit For
			End If
		Next
		leftUpperCornerX = leftUpperCornerX + offsetX1
		rightUpperCornerX = rightUpperCornerX + offsetX2
		leftUpperCornerY = leftUpperCornerY + offsetY1
		rightUpperCornerY = rightUpperCornerY + offsetY2
		leftUpperCornerXForSuit = leftUpperCornerXForSuit + offsetX1
		rightUpperCornerXForSuit = rightUpperCornerXForSuit + offsetX2
		leftUpperCornerYForSuit = leftUpperCornerYForSuit + offsetY1
		rightUpperCornerYForSuit = rightUpperCornerYForSuit + offsetY2
	Next
End Sub

Sub playNow()
	Dim count, intX, intY
	count = 15
	While count > 0 
		FindPic 163, 1020, 472, 1110, "Attachment:playnow.png", "000000", 0, 0.7, intX, intY
		If intX > 0 And intY > 0 Then 
		 	Delay 2000
			TracePrint "Found Playnow button"
		
			Tap intX, intY
			Exit While
		Else 
			'TracePrint "Continue searching playnow..."	
		End If
		count = count - 1
		Delay 1000
	Wend
End Sub
'Tap Play Now
'Tap screenX / 2, screenY - 60

Sub selectGame(gameOption)
	Dim count, isFound, intX, intY, offsetY1, offsetY2
	'Choose game
	count = 10
	isFound = False
	offsetY1 = 200
	offsetY2 = 100
	
	'Check if there is SEE ALL RESULTS
	FindPic 175, 971, 322, 1039, "Attachment:seeallresults.png", "000000", 0, 0.7, intX, intY
	If intX > 0 And intY > 0 Then 
		Touch intX + 5, intY + 5, 500
		Delay 500
		Touch intX + 5, intY + 5, 500
	End If
	
	Delay 2000
	'Make sure the screen is on Select Game tab
	Tap 236, 1078
	Delay 500
	
	TracePrint "Searching entry " & gameOption
	While count > 0 
		FindPic 0, 0, 0, 0, "Attachment:" & gameOption, "000000", 0, 0.7, intX, intY
		If intX > 0 And intY > 0 Then 
			TracePrint "Found entry " & gameOption
	
			isFound = True
			Exit While
		Else 
			TracePrint "Continue searching z1..."
			Swipe 358, 200 + offsetY1, 358, 100 + offsetY2, 800
			offsetY1 = offsetY1 + 200
			offsetY2 = offsetY2 + 100
		End If
		count = count - 1
		Delay 1000
	Wend
	
	If Not isFound Then 
		TracePrint "Not found entryz1"
	Else 
		Delay 5000
		Tap intX, intY	
	End If
End Sub

Sub startGame()
	Dim count, intX, intY, count2
	'Tap Start Game
	count = 15
	count2 = 10
	While count > 0 
		FindPic 0, 0, 0, 0, "Attachment:startgame.png", "000000", 0, 0.4, intX, intY
		If intX > 0 And intY > 0 Then 
			TracePrint "Found Startgame button"
			Tap intX, intY
			
			While count2 > 0
				Delay 1000
				FindPic 0, 0, 0, 0, "Attachment:retry.png", "000000", 0, 0.4, intX, intY
				If intX > 0 And intY > 0 Then
					Tap intX + 10, intY + 10
				End If
			
				Delay 1000
				count2 = count2 - 1
			Wend
			Exit While
		Else 
			'TracePrint "Continue searching startgame..."	
		End If
		count = count - 1
		Delay 1000
	Wend
End Sub

'Waiting game to start
Sub waitGameToStart()
	Dim count, intX, intY
	count = 15
	While count > 0 
		FindPic 0, 0, 0, 0, "Attachment:endbutton.png", "000000", 0, 0.7, intX, intY
		If intX > 0 And intY > 0 Then 
			TracePrint "Found Endbutton button"
			
			FindPic 0, 0, 0, 0, "Attachment:alertontopbanner.png", "000000", 0, 0.7, intX, intY
			If intX > 0 And intY > 0 Then 
			 	Swipe intX + 26, intY + 50, intX + 26, intY, 200
			End If
			
			Delay 5000
			Exit While
		Else 
			'TracePrint "Continue searching Endbutton..."	
		End If
		count = count - 1
		Delay 1000
	Wend
End Sub

Sub endGame()
	Dim count, intX, intY
	Dim offsetY1, offsetY2
	count = 15
	offsetY1 = 0
	offsetY2 = 0
	
	While count > 0 
		FindPic 0, 967, 105, 1132, "Attachment:endbutton.png", "000000", 0, 0.7, intX, intY
		If intX > 0 And intY > 0 Then 
			TracePrint "Hit Endbutton button"
			Tap intX + 5, intY + 5
			
			Delay 2000
			Exit While
//			'Find End Now button
//			FindPic 335, 625, 575, 718, "Attachment:endnowbutton.png", "000000", 0, 0.4, intX, intY
//			If intX > 0 And intY > 0 Then 
//				TracePrint "Hit End Now button"
//				Tap intX + 20, intY + 10
//				
//				Delay 5000
//				
//				FindPic 65, 732, 485, 826, "Attachment:submitbutton.png", "000000", 0, 0.4, intX, intY
//				If intX > 0 And intY > 0 Then 
//					TracePrint "Hit Submit button"
//					Tap intX + 20, intY + 10
//				End If
//					
//				Delay 7000
//				
//			End If
//			
//			Dim countForNext
//			countForNext = 15
//			'Hit Next
//			While countForNext > 0
//				FindPic 12, 500, 580, 1058, "Attachment:nextbutton.png", "000000", 0, 0.6, intX, intY
//				If intX > 0 And intY > 0 Then 
//					TracePrint "Hit Next button"
//					Tap intX + 20, intY + 20
//					
//					Delay 2000
//					
//					FindPic 529, 0, 633, 100, "Attachment:xbutton.png", "000000", 0, 0.3, intX, intY
//					If intX > 0 And intY > 0 Then 
//						TracePrint "Hit X button"
//						Tap intX + 5, intY + 5
//						Delay 1000
//						Exit Sub
//					End If
//				Else 
//					'Swipe the page
//					Swipe 22, 1049 + offsetY1, 22, 619 + offsetY2, 500
//					offsetY1 = offsetY1 + 50
//					offsetY1 = offsetY2 + 20
//				End If
//				countForNext = countForNext - 1
//				Delay 200
//			Wend
			
		Else 
			'TracePrint "Continue searching Endbutton..."	
		End If
		count = count - 1
		Delay 1000
	Wend
End Sub